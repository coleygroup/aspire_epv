strict digraph "" {
	graph [rankdir=LR,
		splines=curved
	];
	node [label="\N"];
	0	[DotPath=ROOT,
		label=<class 'ord_betterproto.Compound'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.Compound'>",
		node_class_as_string="ord_betterproto.Compound",
		type_hint="<class 'ord_betterproto.Compound'>"];
	1	[DotPath="ROOT.identifiers",
		label="typing.List[ord_betterproto.CompoundIdentifier]",
		label_info="str(type_hint)",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		type_hint="typing.List[ord_betterproto.CompoundIdentifier]"];
	0 -> 1	[label=identifiers];
	6	[DotPath="ROOT.amount",
		label=<class 'ord_betterproto.Amount'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		type_hint="<class 'ord_betterproto.Amount'>"];
	0 -> 6	[label=amount];
	23	[DotPath="ROOT.reaction_role",
		label=<enum 'ReactionRoleReactionRoleType'>,
		label_info="str(type_hint)",
		node_class="<enum 'ReactionRoleReactionRoleType'>",
		node_class_as_string="ord_betterproto.ReactionRoleReactionRoleType",
		type_hint="<enum 'ReactionRoleReactionRoleType'>"];
	0 -> 23	[label=reaction_role];
	24	[DotPath="ROOT.is_limiting",
		label="typing.Optional[bool]",
		label_info="str(type_hint)",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		type_hint="typing.Optional[bool]"];
	0 -> 24	[label=is_limiting];
	25	[DotPath="ROOT.preparations",
		label="typing.List[ord_betterproto.CompoundPreparation]",
		label_info="str(type_hint)",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		type_hint="typing.List[ord_betterproto.CompoundPreparation]"];
	0 -> 25	[label=preparations];
	30	[DotPath="ROOT.source",
		label=<class 'ord_betterproto.CompoundSource'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.CompoundSource'>",
		node_class_as_string="ord_betterproto.CompoundSource",
		type_hint="<class 'ord_betterproto.CompoundSource'>"];
	0 -> 30	[label=source];
	34	[DotPath="ROOT.features",
		label="typing.Dict[str, ord_betterproto.Data]",
		label_info="str(type_hint)",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	0 -> 34	[label=features];
	36	[DotPath="ROOT.analyses",
		label="typing.Dict[str, ord_betterproto.Analysis]",
		label_info="str(type_hint)",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		type_hint="typing.Dict[str, ord_betterproto.Analysis]"];
	0 -> 36	[label=analyses];
	2	[DotPath="ROOT.identifiers.<ListIndex>",
		label=<class 'ord_betterproto.CompoundIdentifier'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.CompoundIdentifier'>",
		node_class_as_string="ord_betterproto.CompoundIdentifier",
		type_hint="<class 'ord_betterproto.CompoundIdentifier'>"];
	1 -> 2	[label=<ListIndex>];
	3	[DotPath="ROOT.identifiers.<ListIndex>.type",
		label=<enum 'CompoundIdentifierCompoundIdentifierType'>,
		label_info="str(type_hint)",
		node_class="<enum 'CompoundIdentifierCompoundIdentifierType'>",
		node_class_as_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		type_hint="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	2 -> 3	[label=type];
	4	[DotPath="ROOT.identifiers.<ListIndex>.details",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	2 -> 4	[label=details];
	5	[DotPath="ROOT.identifiers.<ListIndex>.value",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	2 -> 5	[label=value];
	7	[DotPath="ROOT.amount.mass",
		label=<class 'ord_betterproto.Mass'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		type_hint="<class 'ord_betterproto.Mass'>"];
	6 -> 7	[label=mass];
	11	[DotPath="ROOT.amount.moles",
		label=<class 'ord_betterproto.Moles'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		type_hint="<class 'ord_betterproto.Moles'>"];
	6 -> 11	[label=moles];
	15	[DotPath="ROOT.amount.volume",
		label=<class 'ord_betterproto.Volume'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		type_hint="<class 'ord_betterproto.Volume'>"];
	6 -> 15	[label=volume];
	19	[DotPath="ROOT.amount.unmeasured",
		label=<class 'ord_betterproto.UnmeasuredAmount'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	6 -> 19	[label=unmeasured];
	22	[DotPath="ROOT.amount.volume_includes_solutes",
		label="typing.Optional[bool]",
		label_info="str(type_hint)",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		type_hint="typing.Optional[bool]"];
	6 -> 22	[label=volume_includes_solutes];
	8	[DotPath="ROOT.amount.mass.value",
		label="typing.Optional[float]",
		label_info="str(type_hint)",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		type_hint="typing.Optional[float]"];
	7 -> 8	[label=value];
	9	[DotPath="ROOT.amount.mass.precision",
		label="typing.Optional[float]",
		label_info="str(type_hint)",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		type_hint="typing.Optional[float]"];
	7 -> 9	[label=precision];
	10	[DotPath="ROOT.amount.mass.units",
		label=<enum 'MassMassUnit'>,
		label_info="str(type_hint)",
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		type_hint="<enum 'MassMassUnit'>"];
	7 -> 10	[label=units];
	12	[DotPath="ROOT.amount.moles.value",
		label="typing.Optional[float]",
		label_info="str(type_hint)",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		type_hint="typing.Optional[float]"];
	11 -> 12	[label=value];
	13	[DotPath="ROOT.amount.moles.precision",
		label="typing.Optional[float]",
		label_info="str(type_hint)",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		type_hint="typing.Optional[float]"];
	11 -> 13	[label=precision];
	14	[DotPath="ROOT.amount.moles.units",
		label=<enum 'MolesMolesUnit'>,
		label_info="str(type_hint)",
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		type_hint="<enum 'MolesMolesUnit'>"];
	11 -> 14	[label=units];
	16	[DotPath="ROOT.amount.volume.value",
		label="typing.Optional[float]",
		label_info="str(type_hint)",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		type_hint="typing.Optional[float]"];
	15 -> 16	[label=value];
	17	[DotPath="ROOT.amount.volume.precision",
		label="typing.Optional[float]",
		label_info="str(type_hint)",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		type_hint="typing.Optional[float]"];
	15 -> 17	[label=precision];
	18	[DotPath="ROOT.amount.volume.units",
		label=<enum 'VolumeVolumeUnit'>,
		label_info="str(type_hint)",
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	15 -> 18	[label=units];
	20	[DotPath="ROOT.amount.unmeasured.type",
		label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		label_info="str(type_hint)",
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	19 -> 20	[label=type];
	21	[DotPath="ROOT.amount.unmeasured.details",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	19 -> 21	[label=details];
	26	[DotPath="ROOT.preparations.<ListIndex>",
		label=<class 'ord_betterproto.CompoundPreparation'>,
		label_info="str(type_hint)",
		node_class="<class 'ord_betterproto.CompoundPreparation'>",
		node_class_as_string="ord_betterproto.CompoundPreparation",
		type_hint="<class 'ord_betterproto.CompoundPreparation'>"];
	25 -> 26	[label=<ListIndex>];
	27	[DotPath="ROOT.preparations.<ListIndex>.type",
		label=<enum 'CompoundPreparationCompoundPreparationType'>,
		label_info="str(type_hint)",
		node_class="<enum 'CompoundPreparationCompoundPreparationType'>",
		node_class_as_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		type_hint="<enum 'CompoundPreparationCompoundPreparationType'>"];
	26 -> 27	[label=type];
	28	[DotPath="ROOT.preparations.<ListIndex>.details",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	26 -> 28	[label=details];
	29	[DotPath="ROOT.preparations.<ListIndex>.reaction_id",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	26 -> 29	[label=reaction_id];
	31	[DotPath="ROOT.source.vendor",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	30 -> 31	[label=vendor];
	32	[DotPath="ROOT.source.catalog_id",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	30 -> 32	[label=catalog_id];
	33	[DotPath="ROOT.source.lot",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	30 -> 33	[label=lot];
	35	[DotPath="ROOT.features.<DictKey>",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	34 -> 35	[label=<DictKey>];
	37	[DotPath="ROOT.analyses.<DictKey>",
		label=<class 'str'>,
		label_info="str(type_hint)",
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		type_hint="<class 'str'>"];
	36 -> 37	[label=<DictKey>];
}
