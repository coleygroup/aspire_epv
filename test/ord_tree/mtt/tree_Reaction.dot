strict digraph "" {
	graph [rankdir=LR,
		splines=curved
	];
	node [label="\N"];
	"<ROOT>"	[label=<class 'ord_betterproto.Reaction'>,
		node_class="<class 'ord_betterproto.Reaction'>",
		node_class_as_string="ord_betterproto.Reaction",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Reaction'>"];
	"<ROOT>|identifiers"	[label="typing.List[ord_betterproto.ReactionIdentifier]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ReactionIdentifier]"];
	"<ROOT>" -> "<ROOT>|identifiers"	[label=identifiers];
	"<ROOT>|inputs"	[label="typing.Dict[str, ord_betterproto.ReactionInput]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.ReactionInput]"];
	"<ROOT>" -> "<ROOT>|inputs"	[label=inputs];
	"<ROOT>|setup"	[label=<class 'ord_betterproto.ReactionSetup'>,
		node_class="<class 'ord_betterproto.ReactionSetup'>",
		node_class_as_string="ord_betterproto.ReactionSetup",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionSetup'>"];
	"<ROOT>" -> "<ROOT>|setup"	[label=setup];
	"<ROOT>|conditions"	[label=<class 'ord_betterproto.ReactionConditions'>,
		node_class="<class 'ord_betterproto.ReactionConditions'>",
		node_class_as_string="ord_betterproto.ReactionConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionConditions'>"];
	"<ROOT>" -> "<ROOT>|conditions"	[label=conditions];
	"<ROOT>|notes"	[label=<class 'ord_betterproto.ReactionNotes'>,
		node_class="<class 'ord_betterproto.ReactionNotes'>",
		node_class_as_string="ord_betterproto.ReactionNotes",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionNotes'>"];
	"<ROOT>" -> "<ROOT>|notes"	[label=notes];
	"<ROOT>|observations"	[label="typing.List[ord_betterproto.ReactionObservation]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ReactionObservation]"];
	"<ROOT>" -> "<ROOT>|observations"	[label=observations];
	"<ROOT>|workups"	[label="typing.List[ord_betterproto.ReactionWorkup]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ReactionWorkup]"];
	"<ROOT>" -> "<ROOT>|workups"	[label=workups];
	"<ROOT>|outcomes"	[label="typing.List[ord_betterproto.ReactionOutcome]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ReactionOutcome]"];
	"<ROOT>" -> "<ROOT>|outcomes"	[label=outcomes];
	"<ROOT>|provenance"	[label=<class 'ord_betterproto.ReactionProvenance'>,
		node_class="<class 'ord_betterproto.ReactionProvenance'>",
		node_class_as_string="ord_betterproto.ReactionProvenance",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionProvenance'>"];
	"<ROOT>" -> "<ROOT>|provenance"	[label=provenance];
	"<ROOT>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>" -> "<ROOT>|reaction_id"	[label=reaction_id];
	"<ROOT>|identifiers|<ListIndex>"	[label=<class 'ord_betterproto.ReactionIdentifier'>,
		node_class="<class 'ord_betterproto.ReactionIdentifier'>",
		node_class_as_string="ord_betterproto.ReactionIdentifier",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionIdentifier'>"];
	"<ROOT>|identifiers" -> "<ROOT>|identifiers|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|identifiers|<ListIndex>|type"	[label=<enum 'ReactionIdentifierReactionIdentifierType'>,
		node_class="<enum 'ReactionIdentifierReactionIdentifierType'>",
		node_class_as_string="ord_betterproto.ReactionIdentifierReactionIdentifierType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionIdentifierReactionIdentifierType'>"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|type"	[label=type];
	"<ROOT>|identifiers|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|details"	[label=details];
	"<ROOT>|identifiers|<ListIndex>|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|value"	[label=value];
	"<ROOT>|identifiers|<ListIndex>|is_mapped"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|is_mapped"	[label=is_mapped];
	"<ROOT>|inputs|<DictKey>"	[label=<class 'ord_betterproto.ReactionInput'>,
		node_class="<class 'ord_betterproto.ReactionInput'>",
		node_class_as_string="ord_betterproto.ReactionInput",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInput'>"];
	"<ROOT>|inputs" -> "<ROOT>|inputs|<DictKey>"	[label=<DictKey>];
	"<ROOT>|inputs|<DictKey>|components"	[label="typing.List[ord_betterproto.Compound]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.Compound]"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components"	[label=components];
	"<ROOT>|inputs|<DictKey>|crude_components"	[label="typing.List[ord_betterproto.CrudeComponent]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CrudeComponent]"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|crude_components"	[label=crude_components];
	"<ROOT>|inputs|<DictKey>|addition_order"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_order"	[label=addition_order];
	"<ROOT>|inputs|<DictKey>|addition_time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_time"	[label=addition_time];
	"<ROOT>|inputs|<DictKey>|addition_speed"	[label=<class 'ord_betterproto.ReactionInputAdditionSpeed'>,
		node_class="<class 'ord_betterproto.ReactionInputAdditionSpeed'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionSpeed",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInputAdditionSpeed'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_speed"	[label=addition_speed];
	"<ROOT>|inputs|<DictKey>|addition_duration"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_duration"	[label=addition_duration];
	"<ROOT>|inputs|<DictKey>|flow_rate"	[label=<class 'ord_betterproto.FlowRate'>,
		node_class="<class 'ord_betterproto.FlowRate'>",
		node_class_as_string="ord_betterproto.FlowRate",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.FlowRate'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|flow_rate"	[label=flow_rate];
	"<ROOT>|inputs|<DictKey>|addition_device"	[label=<class 'ord_betterproto.ReactionInputAdditionDevice'>,
		node_class="<class 'ord_betterproto.ReactionInputAdditionDevice'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionDevice",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInputAdditionDevice'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_device"	[label=addition_device];
	"<ROOT>|inputs|<DictKey>|addition_temperature"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_temperature"	[label=addition_temperature];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>"	[label=<class 'ord_betterproto.Compound'>,
		node_class="<class 'ord_betterproto.Compound'>",
		node_class_as_string="ord_betterproto.Compound",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|inputs|<DictKey>|components" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers"	[label="typing.List[ord_betterproto.CompoundIdentifier]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers"	[label=identifiers];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount"	[label=amount];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|reaction_role"	[label=<enum 'ReactionRoleReactionRoleType'>,
		node_class="<enum 'ReactionRoleReactionRoleType'>",
		node_class_as_string="ord_betterproto.ReactionRoleReactionRoleType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|reaction_role"	[label=reaction_role];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|is_limiting"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|is_limiting"	[label=is_limiting];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations"	[label="typing.List[ord_betterproto.CompoundPreparation]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations"	[label=preparations];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source"	[label=<class 'ord_betterproto.CompoundSource'>,
		node_class="<class 'ord_betterproto.CompoundSource'>",
		node_class_as_string="ord_betterproto.CompoundSource",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source"	[label=source];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features"	[label=features];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses"	[label="typing.Dict[str, ord_betterproto.Analysis]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses"	[label=analyses];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>"	[label=<class 'ord_betterproto.CompoundIdentifier'>,
		node_class="<class 'ord_betterproto.CompoundIdentifier'>",
		node_class_as_string="ord_betterproto.CompoundIdentifier",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|type"	[label=<enum 'CompoundIdentifierCompoundIdentifierType'>,
		node_class="<enum 'CompoundIdentifierCompoundIdentifierType'>",
		node_class_as_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>"	[label=<class 'ord_betterproto.CompoundPreparation'>,
		node_class="<class 'ord_betterproto.CompoundPreparation'>",
		node_class_as_string="ord_betterproto.CompoundPreparation",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|type"	[label=<enum 'CompoundPreparationCompoundPreparationType'>,
		node_class="<enum 'CompoundPreparationCompoundPreparationType'>",
		node_class_as_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|vendor"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|vendor"	[label=vendor];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|catalog_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|catalog_id"	[label=catalog_id];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|lot"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|lot"	[label=lot];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>"	[label=<DictKey>];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|url"	[label=url];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|description"	[label=description];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|format"	[label=format];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>"	[label=<class 'ord_betterproto.Analysis'>,
		node_class="<class 'ord_betterproto.Analysis'>",
		node_class_as_string="ord_betterproto.Analysis",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>"	[label=<DictKey>];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|type"	[label=<enum 'AnalysisAnalysisType'>,
		node_class="<enum 'AnalysisAnalysisType'>",
		node_class_as_string="ord_betterproto.AnalysisAnalysisType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=chmo_id];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label=is_of_isolated_species];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data"	[label=data];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=instrument_manufacturer];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=instrument_last_calibrated];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<DictKey>];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=url];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=description];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=format];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>"	[label=<class 'ord_betterproto.CrudeComponent'>,
		node_class="<class 'ord_betterproto.CrudeComponent'>",
		node_class_as_string="ord_betterproto.CrudeComponent",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CrudeComponent'>"];
	"<ROOT>|inputs|<DictKey>|crude_components" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|includes_workup"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|includes_workup"	[label=includes_workup];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|has_derived_amount"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|has_derived_amount"	[label=has_derived_amount];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount"	[label=amount];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|addition_time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_time" -> "<ROOT>|inputs|<DictKey>|addition_time|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|addition_time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_time" -> "<ROOT>|inputs|<DictKey>|addition_time|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|addition_time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|inputs|<DictKey>|addition_time" -> "<ROOT>|inputs|<DictKey>|addition_time|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|addition_speed|type"	[label=<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>,
		node_class="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionSpeedAdditionSpeedType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>"];
	"<ROOT>|inputs|<DictKey>|addition_speed" -> "<ROOT>|inputs|<DictKey>|addition_speed|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|addition_speed|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|addition_speed" -> "<ROOT>|inputs|<DictKey>|addition_speed|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|addition_duration|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_duration" -> "<ROOT>|inputs|<DictKey>|addition_duration|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|addition_duration|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_duration" -> "<ROOT>|inputs|<DictKey>|addition_duration|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|addition_duration|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|inputs|<DictKey>|addition_duration" -> "<ROOT>|inputs|<DictKey>|addition_duration|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|flow_rate|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|flow_rate" -> "<ROOT>|inputs|<DictKey>|flow_rate|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|flow_rate|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|flow_rate" -> "<ROOT>|inputs|<DictKey>|flow_rate|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|flow_rate|units"	[label=<enum 'FlowRateFlowRateUnit'>,
		node_class="<enum 'FlowRateFlowRateUnit'>",
		node_class_as_string="ord_betterproto.FlowRateFlowRateUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'FlowRateFlowRateUnit'>"];
	"<ROOT>|inputs|<DictKey>|flow_rate" -> "<ROOT>|inputs|<DictKey>|flow_rate|units"	[label=units];
	"<ROOT>|inputs|<DictKey>|addition_device|type"	[label=<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>,
		node_class="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionDeviceAdditionDeviceType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>"];
	"<ROOT>|inputs|<DictKey>|addition_device" -> "<ROOT>|inputs|<DictKey>|addition_device|type"	[label=type];
	"<ROOT>|inputs|<DictKey>|addition_device|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|addition_device" -> "<ROOT>|inputs|<DictKey>|addition_device|details"	[label=details];
	"<ROOT>|inputs|<DictKey>|addition_temperature|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_temperature" -> "<ROOT>|inputs|<DictKey>|addition_temperature|value"	[label=value];
	"<ROOT>|inputs|<DictKey>|addition_temperature|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_temperature" -> "<ROOT>|inputs|<DictKey>|addition_temperature|precision"	[label=precision];
	"<ROOT>|inputs|<DictKey>|addition_temperature|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|inputs|<DictKey>|addition_temperature" -> "<ROOT>|inputs|<DictKey>|addition_temperature|units"	[label=units];
	"<ROOT>|setup|vessel"	[label=<class 'ord_betterproto.Vessel'>,
		node_class="<class 'ord_betterproto.Vessel'>",
		node_class_as_string="ord_betterproto.Vessel",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Vessel'>"];
	"<ROOT>|setup" -> "<ROOT>|setup|vessel"	[label=vessel];
	"<ROOT>|setup|is_automated"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|setup" -> "<ROOT>|setup|is_automated"	[label=is_automated];
	"<ROOT>|setup|automation_platform"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup" -> "<ROOT>|setup|automation_platform"	[label=automation_platform];
	"<ROOT>|setup|automation_code"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|setup" -> "<ROOT>|setup|automation_code"	[label=automation_code];
	"<ROOT>|setup|environment"	[label=<class 'ord_betterproto.ReactionSetupReactionEnvironment'>,
		node_class="<class 'ord_betterproto.ReactionSetupReactionEnvironment'>",
		node_class_as_string="ord_betterproto.ReactionSetupReactionEnvironment",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionSetupReactionEnvironment'>"];
	"<ROOT>|setup" -> "<ROOT>|setup|environment"	[label=environment];
	"<ROOT>|setup|vessel|type"	[label=<enum 'VesselVesselType'>,
		node_class="<enum 'VesselVesselType'>",
		node_class_as_string="ord_betterproto.VesselVesselType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VesselVesselType'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|type"	[label=type];
	"<ROOT>|setup|vessel|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|details"	[label=details];
	"<ROOT>|setup|vessel|material"	[label=<class 'ord_betterproto.VesselMaterial'>,
		node_class="<class 'ord_betterproto.VesselMaterial'>",
		node_class_as_string="ord_betterproto.VesselMaterial",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.VesselMaterial'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|material"	[label=material];
	"<ROOT>|setup|vessel|preparations"	[label="typing.List[ord_betterproto.VesselPreparation]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.VesselPreparation]"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|preparations"	[label=preparations];
	"<ROOT>|setup|vessel|attachments"	[label="typing.List[ord_betterproto.VesselAttachment]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.VesselAttachment]"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|attachments"	[label=attachments];
	"<ROOT>|setup|vessel|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|volume"	[label=volume];
	"<ROOT>|setup|vessel|plate_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|plate_id"	[label=plate_id];
	"<ROOT>|setup|vessel|plate_position"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|plate_position"	[label=plate_position];
	"<ROOT>|setup|vessel|material|type"	[label=<enum 'VesselMaterialVesselMaterialType'>,
		node_class="<enum 'VesselMaterialVesselMaterialType'>",
		node_class_as_string="ord_betterproto.VesselMaterialVesselMaterialType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VesselMaterialVesselMaterialType'>"];
	"<ROOT>|setup|vessel|material" -> "<ROOT>|setup|vessel|material|type"	[label=type];
	"<ROOT>|setup|vessel|material|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|vessel|material" -> "<ROOT>|setup|vessel|material|details"	[label=details];
	"<ROOT>|setup|vessel|preparations|<ListIndex>"	[label=<class 'ord_betterproto.VesselPreparation'>,
		node_class="<class 'ord_betterproto.VesselPreparation'>",
		node_class_as_string="ord_betterproto.VesselPreparation",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.VesselPreparation'>"];
	"<ROOT>|setup|vessel|preparations" -> "<ROOT>|setup|vessel|preparations|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|setup|vessel|preparations|<ListIndex>|type"	[label=<enum 'VesselPreparationVesselPreparationType'>,
		node_class="<enum 'VesselPreparationVesselPreparationType'>",
		node_class_as_string="ord_betterproto.VesselPreparationVesselPreparationType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VesselPreparationVesselPreparationType'>"];
	"<ROOT>|setup|vessel|preparations|<ListIndex>" -> "<ROOT>|setup|vessel|preparations|<ListIndex>|type"	[label=type];
	"<ROOT>|setup|vessel|preparations|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|vessel|preparations|<ListIndex>" -> "<ROOT>|setup|vessel|preparations|<ListIndex>|details"	[label=details];
	"<ROOT>|setup|vessel|attachments|<ListIndex>"	[label=<class 'ord_betterproto.VesselAttachment'>,
		node_class="<class 'ord_betterproto.VesselAttachment'>",
		node_class_as_string="ord_betterproto.VesselAttachment",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.VesselAttachment'>"];
	"<ROOT>|setup|vessel|attachments" -> "<ROOT>|setup|vessel|attachments|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|setup|vessel|attachments|<ListIndex>|type"	[label=<enum 'VesselAttachmentVesselAttachmentType'>,
		node_class="<enum 'VesselAttachmentVesselAttachmentType'>",
		node_class_as_string="ord_betterproto.VesselAttachmentVesselAttachmentType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VesselAttachmentVesselAttachmentType'>"];
	"<ROOT>|setup|vessel|attachments|<ListIndex>" -> "<ROOT>|setup|vessel|attachments|<ListIndex>|type"	[label=type];
	"<ROOT>|setup|vessel|attachments|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|vessel|attachments|<ListIndex>" -> "<ROOT>|setup|vessel|attachments|<ListIndex>|details"	[label=details];
	"<ROOT>|setup|vessel|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|setup|vessel|volume" -> "<ROOT>|setup|vessel|volume|value"	[label=value];
	"<ROOT>|setup|vessel|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|setup|vessel|volume" -> "<ROOT>|setup|vessel|volume|precision"	[label=precision];
	"<ROOT>|setup|vessel|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|setup|vessel|volume" -> "<ROOT>|setup|vessel|volume|units"	[label=units];
	"<ROOT>|setup|automation_code|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|setup|automation_code" -> "<ROOT>|setup|automation_code|<DictKey>"	[label=<DictKey>];
	"<ROOT>|setup|automation_code|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|setup|automation_code|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|setup|automation_code|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|setup|automation_code|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|setup|automation_code|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|url"	[label=url];
	"<ROOT>|setup|automation_code|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|description"	[label=description];
	"<ROOT>|setup|automation_code|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|format"	[label=format];
	"<ROOT>|setup|environment|type"	[label=<enum 'ReactionSetupReactionEnvironmentReactionEnvironmentType'>,
		node_class="<enum 'ReactionSetupReactionEnvironmentReactionEnvironmentType'>",
		node_class_as_string="ord_betterproto.ReactionSetupReactionEnvironmentReactionEnvironmentType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionSetupReactionEnvironmentReactionEnvironmentType'>"];
	"<ROOT>|setup|environment" -> "<ROOT>|setup|environment|type"	[label=type];
	"<ROOT>|setup|environment|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|setup|environment" -> "<ROOT>|setup|environment|details"	[label=details];
	"<ROOT>|conditions|temperature"	[label=<class 'ord_betterproto.TemperatureConditions'>,
		node_class="<class 'ord_betterproto.TemperatureConditions'>",
		node_class_as_string="ord_betterproto.TemperatureConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.TemperatureConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|temperature"	[label=temperature];
	"<ROOT>|conditions|pressure"	[label=<class 'ord_betterproto.PressureConditions'>,
		node_class="<class 'ord_betterproto.PressureConditions'>",
		node_class_as_string="ord_betterproto.PressureConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.PressureConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|pressure"	[label=pressure];
	"<ROOT>|conditions|stirring"	[label=<class 'ord_betterproto.StirringConditions'>,
		node_class="<class 'ord_betterproto.StirringConditions'>",
		node_class_as_string="ord_betterproto.StirringConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.StirringConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|stirring"	[label=stirring];
	"<ROOT>|conditions|illumination"	[label=<class 'ord_betterproto.IlluminationConditions'>,
		node_class="<class 'ord_betterproto.IlluminationConditions'>",
		node_class_as_string="ord_betterproto.IlluminationConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.IlluminationConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|illumination"	[label=illumination];
	"<ROOT>|conditions|electrochemistry"	[label=<class 'ord_betterproto.ElectrochemistryConditions'>,
		node_class="<class 'ord_betterproto.ElectrochemistryConditions'>",
		node_class_as_string="ord_betterproto.ElectrochemistryConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ElectrochemistryConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|electrochemistry"	[label=electrochemistry];
	"<ROOT>|conditions|flow"	[label=<class 'ord_betterproto.FlowConditions'>,
		node_class="<class 'ord_betterproto.FlowConditions'>",
		node_class_as_string="ord_betterproto.FlowConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.FlowConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|flow"	[label=flow];
	"<ROOT>|conditions|reflux"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|reflux"	[label=reflux];
	"<ROOT>|conditions|ph"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|ph"	[label=ph];
	"<ROOT>|conditions|conditions_are_dynamic"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|conditions_are_dynamic"	[label=conditions_are_dynamic];
	"<ROOT>|conditions|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|details"	[label=details];
	"<ROOT>|conditions|temperature|control"	[label=<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>,
		node_class="<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureControl",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>"];
	"<ROOT>|conditions|temperature" -> "<ROOT>|conditions|temperature|control"	[label=control];
	"<ROOT>|conditions|temperature|setpoint"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|conditions|temperature" -> "<ROOT>|conditions|temperature|setpoint"	[label=setpoint];
	"<ROOT>|conditions|temperature|measurements"	[label="typing.List[ord_betterproto.TemperatureConditionsTemperatureMeasurement]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.TemperatureConditionsTemperatureMeasurement]"];
	"<ROOT>|conditions|temperature" -> "<ROOT>|conditions|temperature|measurements"	[label=measurements];
	"<ROOT>|conditions|temperature|control|type"	[label=<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>,
		node_class="<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureControlTemperatureControlType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>"];
	"<ROOT>|conditions|temperature|control" -> "<ROOT>|conditions|temperature|control|type"	[label=type];
	"<ROOT>|conditions|temperature|control|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|temperature|control" -> "<ROOT>|conditions|temperature|control|details"	[label=details];
	"<ROOT>|conditions|temperature|setpoint|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|setpoint" -> "<ROOT>|conditions|temperature|setpoint|value"	[label=value];
	"<ROOT>|conditions|temperature|setpoint|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|setpoint" -> "<ROOT>|conditions|temperature|setpoint|precision"	[label=precision];
	"<ROOT>|conditions|temperature|setpoint|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|conditions|temperature|setpoint" -> "<ROOT>|conditions|temperature|setpoint|units"	[label=units];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>"	[label=<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>,
		node_class="<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureMeasurement",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>"];
	"<ROOT>|conditions|temperature|measurements" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|type"	[label=<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>,
		node_class="<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|type"	[label=type];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|details"	[label=details];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time"	[label=time];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature"	[label=temperature];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time|value"	[label=value];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time|precision"	[label=precision];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time|units"	[label=units];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|value"	[label=value];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|precision"	[label=precision];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|units"	[label=units];
	"<ROOT>|conditions|pressure|control"	[label=<class 'ord_betterproto.PressureConditionsPressureControl'>,
		node_class="<class 'ord_betterproto.PressureConditionsPressureControl'>",
		node_class_as_string="ord_betterproto.PressureConditionsPressureControl",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.PressureConditionsPressureControl'>"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|control"	[label=control];
	"<ROOT>|conditions|pressure|setpoint"	[label=<class 'ord_betterproto.Pressure'>,
		node_class="<class 'ord_betterproto.Pressure'>",
		node_class_as_string="ord_betterproto.Pressure",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Pressure'>"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|setpoint"	[label=setpoint];
	"<ROOT>|conditions|pressure|atmosphere"	[label=<class 'ord_betterproto.PressureConditionsAtmosphere'>,
		node_class="<class 'ord_betterproto.PressureConditionsAtmosphere'>",
		node_class_as_string="ord_betterproto.PressureConditionsAtmosphere",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.PressureConditionsAtmosphere'>"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|atmosphere"	[label=atmosphere];
	"<ROOT>|conditions|pressure|measurements"	[label="typing.List[ord_betterproto.PressureConditionsPressureMeasurement]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.PressureConditionsPressureMeasurement]"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|measurements"	[label=measurements];
	"<ROOT>|conditions|pressure|control|type"	[label=<enum 'PressureConditionsPressureControlPressureControlType'>,
		node_class="<enum 'PressureConditionsPressureControlPressureControlType'>",
		node_class_as_string="ord_betterproto.PressureConditionsPressureControlPressureControlType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'PressureConditionsPressureControlPressureControlType'>"];
	"<ROOT>|conditions|pressure|control" -> "<ROOT>|conditions|pressure|control|type"	[label=type];
	"<ROOT>|conditions|pressure|control|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|pressure|control" -> "<ROOT>|conditions|pressure|control|details"	[label=details];
	"<ROOT>|conditions|pressure|setpoint|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|setpoint" -> "<ROOT>|conditions|pressure|setpoint|value"	[label=value];
	"<ROOT>|conditions|pressure|setpoint|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|setpoint" -> "<ROOT>|conditions|pressure|setpoint|precision"	[label=precision];
	"<ROOT>|conditions|pressure|setpoint|units"	[label=<enum 'PressurePressureUnit'>,
		node_class="<enum 'PressurePressureUnit'>",
		node_class_as_string="ord_betterproto.PressurePressureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'PressurePressureUnit'>"];
	"<ROOT>|conditions|pressure|setpoint" -> "<ROOT>|conditions|pressure|setpoint|units"	[label=units];
	"<ROOT>|conditions|pressure|atmosphere|type"	[label=<enum 'PressureConditionsAtmosphereAtmosphereType'>,
		node_class="<enum 'PressureConditionsAtmosphereAtmosphereType'>",
		node_class_as_string="ord_betterproto.PressureConditionsAtmosphereAtmosphereType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'PressureConditionsAtmosphereAtmosphereType'>"];
	"<ROOT>|conditions|pressure|atmosphere" -> "<ROOT>|conditions|pressure|atmosphere|type"	[label=type];
	"<ROOT>|conditions|pressure|atmosphere|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|pressure|atmosphere" -> "<ROOT>|conditions|pressure|atmosphere|details"	[label=details];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>"	[label=<class 'ord_betterproto.PressureConditionsPressureMeasurement'>,
		node_class="<class 'ord_betterproto.PressureConditionsPressureMeasurement'>",
		node_class_as_string="ord_betterproto.PressureConditionsPressureMeasurement",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.PressureConditionsPressureMeasurement'>"];
	"<ROOT>|conditions|pressure|measurements" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|type"	[label=<enum 'PressureConditionsPressureMeasurementPressureMeasurementType'>,
		node_class="<enum 'PressureConditionsPressureMeasurementPressureMeasurementType'>",
		node_class_as_string="ord_betterproto.PressureConditionsPressureMeasurementPressureMeasurementType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'PressureConditionsPressureMeasurementPressureMeasurementType'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|type"	[label=type];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|details"	[label=details];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time"	[label=time];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure"	[label=<class 'ord_betterproto.Pressure'>,
		node_class="<class 'ord_betterproto.Pressure'>",
		node_class_as_string="ord_betterproto.Pressure",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Pressure'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure"	[label=pressure];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time|value"	[label=value];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time|precision"	[label=precision];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time|units"	[label=units];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|value"	[label=value];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|precision"	[label=precision];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|units"	[label=<enum 'PressurePressureUnit'>,
		node_class="<enum 'PressurePressureUnit'>",
		node_class_as_string="ord_betterproto.PressurePressureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'PressurePressureUnit'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|units"	[label=units];
	"<ROOT>|conditions|stirring|type"	[label=<enum 'StirringConditionsStirringMethodType'>,
		node_class="<enum 'StirringConditionsStirringMethodType'>",
		node_class_as_string="ord_betterproto.StirringConditionsStirringMethodType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'StirringConditionsStirringMethodType'>"];
	"<ROOT>|conditions|stirring" -> "<ROOT>|conditions|stirring|type"	[label=type];
	"<ROOT>|conditions|stirring|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|stirring" -> "<ROOT>|conditions|stirring|details"	[label=details];
	"<ROOT>|conditions|stirring|rate"	[label=<class 'ord_betterproto.StirringConditionsStirringRate'>,
		node_class="<class 'ord_betterproto.StirringConditionsStirringRate'>",
		node_class_as_string="ord_betterproto.StirringConditionsStirringRate",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.StirringConditionsStirringRate'>"];
	"<ROOT>|conditions|stirring" -> "<ROOT>|conditions|stirring|rate"	[label=rate];
	"<ROOT>|conditions|stirring|rate|type"	[label=<enum 'StirringConditionsStirringRateStirringRateType'>,
		node_class="<enum 'StirringConditionsStirringRateStirringRateType'>",
		node_class_as_string="ord_betterproto.StirringConditionsStirringRateStirringRateType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'StirringConditionsStirringRateStirringRateType'>"];
	"<ROOT>|conditions|stirring|rate" -> "<ROOT>|conditions|stirring|rate|type"	[label=type];
	"<ROOT>|conditions|stirring|rate|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|stirring|rate" -> "<ROOT>|conditions|stirring|rate|details"	[label=details];
	"<ROOT>|conditions|stirring|rate|rpm"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|conditions|stirring|rate" -> "<ROOT>|conditions|stirring|rate|rpm"	[label=rpm];
	"<ROOT>|conditions|illumination|type"	[label=<enum 'IlluminationConditionsIlluminationType'>,
		node_class="<enum 'IlluminationConditionsIlluminationType'>",
		node_class_as_string="ord_betterproto.IlluminationConditionsIlluminationType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'IlluminationConditionsIlluminationType'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|type"	[label=type];
	"<ROOT>|conditions|illumination|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|details"	[label=details];
	"<ROOT>|conditions|illumination|peak_wavelength"	[label=<class 'ord_betterproto.Wavelength'>,
		node_class="<class 'ord_betterproto.Wavelength'>",
		node_class_as_string="ord_betterproto.Wavelength",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Wavelength'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|peak_wavelength"	[label=peak_wavelength];
	"<ROOT>|conditions|illumination|color"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|color"	[label=color];
	"<ROOT>|conditions|illumination|distance_to_vessel"	[label=<class 'ord_betterproto.Length'>,
		node_class="<class 'ord_betterproto.Length'>",
		node_class_as_string="ord_betterproto.Length",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Length'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|distance_to_vessel"	[label=distance_to_vessel];
	"<ROOT>|conditions|illumination|peak_wavelength|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|peak_wavelength" -> "<ROOT>|conditions|illumination|peak_wavelength|value"	[label=value];
	"<ROOT>|conditions|illumination|peak_wavelength|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|peak_wavelength" -> "<ROOT>|conditions|illumination|peak_wavelength|precision"	[label=precision];
	"<ROOT>|conditions|illumination|peak_wavelength|units"	[label=<enum 'WavelengthWavelengthUnit'>,
		node_class="<enum 'WavelengthWavelengthUnit'>",
		node_class_as_string="ord_betterproto.WavelengthWavelengthUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'WavelengthWavelengthUnit'>"];
	"<ROOT>|conditions|illumination|peak_wavelength" -> "<ROOT>|conditions|illumination|peak_wavelength|units"	[label=units];
	"<ROOT>|conditions|illumination|distance_to_vessel|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|distance_to_vessel" -> "<ROOT>|conditions|illumination|distance_to_vessel|value"	[label=value];
	"<ROOT>|conditions|illumination|distance_to_vessel|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|distance_to_vessel" -> "<ROOT>|conditions|illumination|distance_to_vessel|precision"	[label=precision];
	"<ROOT>|conditions|illumination|distance_to_vessel|units"	[label=<enum 'LengthLengthUnit'>,
		node_class="<enum 'LengthLengthUnit'>",
		node_class_as_string="ord_betterproto.LengthLengthUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'LengthLengthUnit'>"];
	"<ROOT>|conditions|illumination|distance_to_vessel" -> "<ROOT>|conditions|illumination|distance_to_vessel|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|type"	[label=<enum 'ElectrochemistryConditionsElectrochemistryType'>,
		node_class="<enum 'ElectrochemistryConditionsElectrochemistryType'>",
		node_class_as_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ElectrochemistryConditionsElectrochemistryType'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|type"	[label=type];
	"<ROOT>|conditions|electrochemistry|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|details"	[label=details];
	"<ROOT>|conditions|electrochemistry|current"	[label=<class 'ord_betterproto.Current'>,
		node_class="<class 'ord_betterproto.Current'>",
		node_class_as_string="ord_betterproto.Current",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Current'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|current"	[label=current];
	"<ROOT>|conditions|electrochemistry|voltage"	[label=<class 'ord_betterproto.Voltage'>,
		node_class="<class 'ord_betterproto.Voltage'>",
		node_class_as_string="ord_betterproto.Voltage",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Voltage'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|voltage"	[label=voltage];
	"<ROOT>|conditions|electrochemistry|anode_material"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|anode_material"	[label=anode_material];
	"<ROOT>|conditions|electrochemistry|cathode_material"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|cathode_material"	[label=cathode_material];
	"<ROOT>|conditions|electrochemistry|electrode_separation"	[label=<class 'ord_betterproto.Length'>,
		node_class="<class 'ord_betterproto.Length'>",
		node_class_as_string="ord_betterproto.Length",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Length'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|electrode_separation"	[label=electrode_separation];
	"<ROOT>|conditions|electrochemistry|measurements"	[label="typing.List[ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement]"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|measurements"	[label=measurements];
	"<ROOT>|conditions|electrochemistry|cell"	[label=<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryCell'>,
		node_class="<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryCell'>",
		node_class_as_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryCell",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryCell'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|cell"	[label=cell];
	"<ROOT>|conditions|electrochemistry|current|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|current" -> "<ROOT>|conditions|electrochemistry|current|value"	[label=value];
	"<ROOT>|conditions|electrochemistry|current|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|current" -> "<ROOT>|conditions|electrochemistry|current|precision"	[label=precision];
	"<ROOT>|conditions|electrochemistry|current|units"	[label=<enum 'CurrentCurrentUnit'>,
		node_class="<enum 'CurrentCurrentUnit'>",
		node_class_as_string="ord_betterproto.CurrentCurrentUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CurrentCurrentUnit'>"];
	"<ROOT>|conditions|electrochemistry|current" -> "<ROOT>|conditions|electrochemistry|current|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|voltage|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|voltage" -> "<ROOT>|conditions|electrochemistry|voltage|value"	[label=value];
	"<ROOT>|conditions|electrochemistry|voltage|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|voltage" -> "<ROOT>|conditions|electrochemistry|voltage|precision"	[label=precision];
	"<ROOT>|conditions|electrochemistry|voltage|units"	[label=<enum 'VoltageVoltageUnit'>,
		node_class="<enum 'VoltageVoltageUnit'>",
		node_class_as_string="ord_betterproto.VoltageVoltageUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VoltageVoltageUnit'>"];
	"<ROOT>|conditions|electrochemistry|voltage" -> "<ROOT>|conditions|electrochemistry|voltage|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|electrode_separation|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|electrode_separation" -> "<ROOT>|conditions|electrochemistry|electrode_separation|value"	[label=value];
	"<ROOT>|conditions|electrochemistry|electrode_separation|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|electrode_separation" -> "<ROOT>|conditions|electrochemistry|electrode_separation|precision"	[label=precision];
	"<ROOT>|conditions|electrochemistry|electrode_separation|units"	[label=<enum 'LengthLengthUnit'>,
		node_class="<enum 'LengthLengthUnit'>",
		node_class_as_string="ord_betterproto.LengthLengthUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'LengthLengthUnit'>"];
	"<ROOT>|conditions|electrochemistry|electrode_separation" -> "<ROOT>|conditions|electrochemistry|electrode_separation|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>"	[label=<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement'>,
		node_class="<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement'>",
		node_class_as_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement'>"];
	"<ROOT>|conditions|electrochemistry|measurements" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time"	[label=time];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current"	[label=<class 'ord_betterproto.Current'>,
		node_class="<class 'ord_betterproto.Current'>",
		node_class_as_string="ord_betterproto.Current",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Current'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current"	[label=current];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage"	[label=<class 'ord_betterproto.Voltage'>,
		node_class="<class 'ord_betterproto.Voltage'>",
		node_class_as_string="ord_betterproto.Voltage",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Voltage'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage"	[label=voltage];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|value"	[label=value];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|precision"	[label=precision];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|value"	[label=value];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|precision"	[label=precision];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|units"	[label=<enum 'CurrentCurrentUnit'>,
		node_class="<enum 'CurrentCurrentUnit'>",
		node_class_as_string="ord_betterproto.CurrentCurrentUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CurrentCurrentUnit'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|value"	[label=value];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|precision"	[label=precision];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|units"	[label=<enum 'VoltageVoltageUnit'>,
		node_class="<enum 'VoltageVoltageUnit'>",
		node_class_as_string="ord_betterproto.VoltageVoltageUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VoltageVoltageUnit'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|units"	[label=units];
	"<ROOT>|conditions|electrochemistry|cell|type"	[label=<enum 'ElectrochemistryConditionsElectrochemistryCellElectrochemistryCellType'>,
		node_class="<enum 'ElectrochemistryConditionsElectrochemistryCellElectrochemistryCellType'>",
		node_class_as_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryCellElectrochemistryCellType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ElectrochemistryConditionsElectrochemistryCellElectrochemistryCellType'>"];
	"<ROOT>|conditions|electrochemistry|cell" -> "<ROOT>|conditions|electrochemistry|cell|type"	[label=type];
	"<ROOT>|conditions|electrochemistry|cell|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry|cell" -> "<ROOT>|conditions|electrochemistry|cell|details"	[label=details];
	"<ROOT>|conditions|flow|type"	[label=<enum 'FlowConditionsFlowType'>,
		node_class="<enum 'FlowConditionsFlowType'>",
		node_class_as_string="ord_betterproto.FlowConditionsFlowType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'FlowConditionsFlowType'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|type"	[label=type];
	"<ROOT>|conditions|flow|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|details"	[label=details];
	"<ROOT>|conditions|flow|pump_type"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|pump_type"	[label=pump_type];
	"<ROOT>|conditions|flow|tubing"	[label=<class 'ord_betterproto.FlowConditionsTubing'>,
		node_class="<class 'ord_betterproto.FlowConditionsTubing'>",
		node_class_as_string="ord_betterproto.FlowConditionsTubing",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.FlowConditionsTubing'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|tubing"	[label=tubing];
	"<ROOT>|conditions|flow|tubing|type"	[label=<enum 'FlowConditionsTubingTubingType'>,
		node_class="<enum 'FlowConditionsTubingTubingType'>",
		node_class_as_string="ord_betterproto.FlowConditionsTubingTubingType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'FlowConditionsTubingTubingType'>"];
	"<ROOT>|conditions|flow|tubing" -> "<ROOT>|conditions|flow|tubing|type"	[label=type];
	"<ROOT>|conditions|flow|tubing|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|conditions|flow|tubing" -> "<ROOT>|conditions|flow|tubing|details"	[label=details];
	"<ROOT>|conditions|flow|tubing|diameter"	[label=<class 'ord_betterproto.Length'>,
		node_class="<class 'ord_betterproto.Length'>",
		node_class_as_string="ord_betterproto.Length",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Length'>"];
	"<ROOT>|conditions|flow|tubing" -> "<ROOT>|conditions|flow|tubing|diameter"	[label=diameter];
	"<ROOT>|conditions|flow|tubing|diameter|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|flow|tubing|diameter" -> "<ROOT>|conditions|flow|tubing|diameter|value"	[label=value];
	"<ROOT>|conditions|flow|tubing|diameter|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|conditions|flow|tubing|diameter" -> "<ROOT>|conditions|flow|tubing|diameter|precision"	[label=precision];
	"<ROOT>|conditions|flow|tubing|diameter|units"	[label=<enum 'LengthLengthUnit'>,
		node_class="<enum 'LengthLengthUnit'>",
		node_class_as_string="ord_betterproto.LengthLengthUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'LengthLengthUnit'>"];
	"<ROOT>|conditions|flow|tubing|diameter" -> "<ROOT>|conditions|flow|tubing|diameter|units"	[label=units];
	"<ROOT>|notes|is_heterogeneous"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_heterogeneous"	[label=is_heterogeneous];
	"<ROOT>|notes|forms_precipitate"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|forms_precipitate"	[label=forms_precipitate];
	"<ROOT>|notes|is_exothermic"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_exothermic"	[label=is_exothermic];
	"<ROOT>|notes|offgasses"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|offgasses"	[label=offgasses];
	"<ROOT>|notes|is_sensitive_to_moisture"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_sensitive_to_moisture"	[label=is_sensitive_to_moisture];
	"<ROOT>|notes|is_sensitive_to_oxygen"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_sensitive_to_oxygen"	[label=is_sensitive_to_oxygen];
	"<ROOT>|notes|is_sensitive_to_light"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_sensitive_to_light"	[label=is_sensitive_to_light];
	"<ROOT>|notes|safety_notes"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|notes" -> "<ROOT>|notes|safety_notes"	[label=safety_notes];
	"<ROOT>|notes|procedure_details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|notes" -> "<ROOT>|notes|procedure_details"	[label=procedure_details];
	"<ROOT>|observations|<ListIndex>"	[label=<class 'ord_betterproto.ReactionObservation'>,
		node_class="<class 'ord_betterproto.ReactionObservation'>",
		node_class_as_string="ord_betterproto.ReactionObservation",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionObservation'>"];
	"<ROOT>|observations" -> "<ROOT>|observations|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|observations|<ListIndex>|time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|observations|<ListIndex>" -> "<ROOT>|observations|<ListIndex>|time"	[label=time];
	"<ROOT>|observations|<ListIndex>|comment"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>" -> "<ROOT>|observations|<ListIndex>|comment"	[label=comment];
	"<ROOT>|observations|<ListIndex>|image"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|observations|<ListIndex>" -> "<ROOT>|observations|<ListIndex>|image"	[label=image];
	"<ROOT>|observations|<ListIndex>|time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|observations|<ListIndex>|time" -> "<ROOT>|observations|<ListIndex>|time|value"	[label=value];
	"<ROOT>|observations|<ListIndex>|time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|observations|<ListIndex>|time" -> "<ROOT>|observations|<ListIndex>|time|precision"	[label=precision];
	"<ROOT>|observations|<ListIndex>|time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|observations|<ListIndex>|time" -> "<ROOT>|observations|<ListIndex>|time|units"	[label=units];
	"<ROOT>|observations|<ListIndex>|image|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|float_value"	[label=float_value];
	"<ROOT>|observations|<ListIndex>|image|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|integer_value"	[label=integer_value];
	"<ROOT>|observations|<ListIndex>|image|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|bytes_value"	[label=bytes_value];
	"<ROOT>|observations|<ListIndex>|image|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|string_value"	[label=string_value];
	"<ROOT>|observations|<ListIndex>|image|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|url"	[label=url];
	"<ROOT>|observations|<ListIndex>|image|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|description"	[label=description];
	"<ROOT>|observations|<ListIndex>|image|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|format"	[label=format];
	"<ROOT>|workups|<ListIndex>"	[label=<class 'ord_betterproto.ReactionWorkup'>,
		node_class="<class 'ord_betterproto.ReactionWorkup'>",
		node_class_as_string="ord_betterproto.ReactionWorkup",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionWorkup'>"];
	"<ROOT>|workups" -> "<ROOT>|workups|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|workups|<ListIndex>|type"	[label=<enum 'ReactionWorkupReactionWorkupType'>,
		node_class="<enum 'ReactionWorkupReactionWorkupType'>",
		node_class_as_string="ord_betterproto.ReactionWorkupReactionWorkupType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionWorkupReactionWorkupType'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|duration"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|duration"	[label=duration];
	"<ROOT>|workups|<ListIndex>|input"	[label=<class 'ord_betterproto.ReactionInput'>,
		node_class="<class 'ord_betterproto.ReactionInput'>",
		node_class_as_string="ord_betterproto.ReactionInput",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInput'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input"	[label=input];
	"<ROOT>|workups|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|amount"	[label=amount];
	"<ROOT>|workups|<ListIndex>|temperature"	[label=<class 'ord_betterproto.TemperatureConditions'>,
		node_class="<class 'ord_betterproto.TemperatureConditions'>",
		node_class_as_string="ord_betterproto.TemperatureConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.TemperatureConditions'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature"	[label=temperature];
	"<ROOT>|workups|<ListIndex>|keep_phase"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|keep_phase"	[label=keep_phase];
	"<ROOT>|workups|<ListIndex>|stirring"	[label=<class 'ord_betterproto.StirringConditions'>,
		node_class="<class 'ord_betterproto.StirringConditions'>",
		node_class_as_string="ord_betterproto.StirringConditions",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.StirringConditions'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|stirring"	[label=stirring];
	"<ROOT>|workups|<ListIndex>|target_ph"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|target_ph"	[label=target_ph];
	"<ROOT>|workups|<ListIndex>|is_automated"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|is_automated"	[label=is_automated];
	"<ROOT>|workups|<ListIndex>|duration|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|duration" -> "<ROOT>|workups|<ListIndex>|duration|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|duration|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|duration" -> "<ROOT>|workups|<ListIndex>|duration|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|duration|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|duration" -> "<ROOT>|workups|<ListIndex>|duration|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|components"	[label="typing.List[ord_betterproto.Compound]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.Compound]"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|components"	[label=components];
	"<ROOT>|workups|<ListIndex>|input|crude_components"	[label="typing.List[ord_betterproto.CrudeComponent]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CrudeComponent]"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|crude_components"	[label=crude_components];
	"<ROOT>|workups|<ListIndex>|input|addition_order"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_order"	[label=addition_order];
	"<ROOT>|workups|<ListIndex>|input|addition_time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_time"	[label=addition_time];
	"<ROOT>|workups|<ListIndex>|input|addition_speed"	[label=<class 'ord_betterproto.ReactionInputAdditionSpeed'>,
		node_class="<class 'ord_betterproto.ReactionInputAdditionSpeed'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionSpeed",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInputAdditionSpeed'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_speed"	[label=addition_speed];
	"<ROOT>|workups|<ListIndex>|input|addition_duration"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_duration"	[label=addition_duration];
	"<ROOT>|workups|<ListIndex>|input|flow_rate"	[label=<class 'ord_betterproto.FlowRate'>,
		node_class="<class 'ord_betterproto.FlowRate'>",
		node_class_as_string="ord_betterproto.FlowRate",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.FlowRate'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|flow_rate"	[label=flow_rate];
	"<ROOT>|workups|<ListIndex>|input|addition_device"	[label=<class 'ord_betterproto.ReactionInputAdditionDevice'>,
		node_class="<class 'ord_betterproto.ReactionInputAdditionDevice'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionDevice",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInputAdditionDevice'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_device"	[label=addition_device];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature"	[label=addition_temperature];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>"	[label=<class 'ord_betterproto.Compound'>,
		node_class="<class 'ord_betterproto.Compound'>",
		node_class_as_string="ord_betterproto.Compound",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|workups|<ListIndex>|input|components" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers"	[label="typing.List[ord_betterproto.CompoundIdentifier]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers"	[label=identifiers];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount"	[label=amount];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|reaction_role"	[label=<enum 'ReactionRoleReactionRoleType'>,
		node_class="<enum 'ReactionRoleReactionRoleType'>",
		node_class_as_string="ord_betterproto.ReactionRoleReactionRoleType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|reaction_role"	[label=reaction_role];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|is_limiting"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|is_limiting"	[label=is_limiting];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations"	[label="typing.List[ord_betterproto.CompoundPreparation]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations"	[label=preparations];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source"	[label=<class 'ord_betterproto.CompoundSource'>,
		node_class="<class 'ord_betterproto.CompoundSource'>",
		node_class_as_string="ord_betterproto.CompoundSource",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source"	[label=source];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features"	[label=features];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses"	[label="typing.Dict[str, ord_betterproto.Analysis]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses"	[label=analyses];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>"	[label=<class 'ord_betterproto.CompoundIdentifier'>,
		node_class="<class 'ord_betterproto.CompoundIdentifier'>",
		node_class_as_string="ord_betterproto.CompoundIdentifier",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|type"	[label=<enum 'CompoundIdentifierCompoundIdentifierType'>,
		node_class="<enum 'CompoundIdentifierCompoundIdentifierType'>",
		node_class_as_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>"	[label=<class 'ord_betterproto.CompoundPreparation'>,
		node_class="<class 'ord_betterproto.CompoundPreparation'>",
		node_class_as_string="ord_betterproto.CompoundPreparation",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|type"	[label=<enum 'CompoundPreparationCompoundPreparationType'>,
		node_class="<enum 'CompoundPreparationCompoundPreparationType'>",
		node_class_as_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|vendor"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|vendor"	[label=vendor];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|catalog_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|catalog_id"	[label=catalog_id];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|lot"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|lot"	[label=lot];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>"	[label=<DictKey>];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|url"	[label=url];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|description"	[label=description];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|format"	[label=format];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>"	[label=<class 'ord_betterproto.Analysis'>,
		node_class="<class 'ord_betterproto.Analysis'>",
		node_class_as_string="ord_betterproto.Analysis",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>"	[label=<DictKey>];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|type"	[label=<enum 'AnalysisAnalysisType'>,
		node_class="<enum 'AnalysisAnalysisType'>",
		node_class_as_string="ord_betterproto.AnalysisAnalysisType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=chmo_id];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label=is_of_isolated_species];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data"	[label=data];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=instrument_manufacturer];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=instrument_last_calibrated];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<DictKey>];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=url];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=description];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=format];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>"	[label=<class 'ord_betterproto.CrudeComponent'>,
		node_class="<class 'ord_betterproto.CrudeComponent'>",
		node_class_as_string="ord_betterproto.CrudeComponent",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CrudeComponent'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|includes_workup"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|includes_workup"	[label=includes_workup];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|has_derived_amount"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|has_derived_amount"	[label=has_derived_amount];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount"	[label=amount];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|addition_time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_time" -> "<ROOT>|workups|<ListIndex>|input|addition_time|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|addition_time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_time" -> "<ROOT>|workups|<ListIndex>|input|addition_time|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|addition_time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_time" -> "<ROOT>|workups|<ListIndex>|input|addition_time|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|addition_speed|type"	[label=<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>,
		node_class="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionSpeedAdditionSpeedType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_speed" -> "<ROOT>|workups|<ListIndex>|input|addition_speed|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|addition_speed|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_speed" -> "<ROOT>|workups|<ListIndex>|input|addition_speed|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|addition_duration|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_duration" -> "<ROOT>|workups|<ListIndex>|input|addition_duration|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|addition_duration|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_duration" -> "<ROOT>|workups|<ListIndex>|input|addition_duration|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|addition_duration|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_duration" -> "<ROOT>|workups|<ListIndex>|input|addition_duration|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|flow_rate|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|flow_rate" -> "<ROOT>|workups|<ListIndex>|input|flow_rate|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|flow_rate|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|flow_rate" -> "<ROOT>|workups|<ListIndex>|input|flow_rate|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|flow_rate|units"	[label=<enum 'FlowRateFlowRateUnit'>,
		node_class="<enum 'FlowRateFlowRateUnit'>",
		node_class_as_string="ord_betterproto.FlowRateFlowRateUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'FlowRateFlowRateUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|flow_rate" -> "<ROOT>|workups|<ListIndex>|input|flow_rate|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|input|addition_device|type"	[label=<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>,
		node_class="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionDeviceAdditionDeviceType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_device" -> "<ROOT>|workups|<ListIndex>|input|addition_device|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|input|addition_device|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_device" -> "<ROOT>|workups|<ListIndex>|input|addition_device|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|workups|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|workups|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|workups|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|workups|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|workups|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|workups|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|workups|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|temperature|control"	[label=<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>,
		node_class="<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureControl",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>"];
	"<ROOT>|workups|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|control"	[label=control];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|workups|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint"	[label=setpoint];
	"<ROOT>|workups|<ListIndex>|temperature|measurements"	[label="typing.List[ord_betterproto.TemperatureConditionsTemperatureMeasurement]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.TemperatureConditionsTemperatureMeasurement]"];
	"<ROOT>|workups|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements"	[label=measurements];
	"<ROOT>|workups|<ListIndex>|temperature|control|type"	[label=<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>,
		node_class="<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureControlTemperatureControlType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>"];
	"<ROOT>|workups|<ListIndex>|temperature|control" -> "<ROOT>|workups|<ListIndex>|temperature|control|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|temperature|control|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|temperature|control" -> "<ROOT>|workups|<ListIndex>|temperature|control|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>"	[label=<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>,
		node_class="<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureMeasurement",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|type"	[label=<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>,
		node_class="<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>",
		node_class_as_string="ord_betterproto.TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time"	[label=time];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature"	[label=temperature];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|value"	[label=value];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|precision"	[label=precision];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|units"	[label=units];
	"<ROOT>|workups|<ListIndex>|stirring|type"	[label=<enum 'StirringConditionsStirringMethodType'>,
		node_class="<enum 'StirringConditionsStirringMethodType'>",
		node_class_as_string="ord_betterproto.StirringConditionsStirringMethodType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'StirringConditionsStirringMethodType'>"];
	"<ROOT>|workups|<ListIndex>|stirring" -> "<ROOT>|workups|<ListIndex>|stirring|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|stirring|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|stirring" -> "<ROOT>|workups|<ListIndex>|stirring|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|stirring|rate"	[label=<class 'ord_betterproto.StirringConditionsStirringRate'>,
		node_class="<class 'ord_betterproto.StirringConditionsStirringRate'>",
		node_class_as_string="ord_betterproto.StirringConditionsStirringRate",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.StirringConditionsStirringRate'>"];
	"<ROOT>|workups|<ListIndex>|stirring" -> "<ROOT>|workups|<ListIndex>|stirring|rate"	[label=rate];
	"<ROOT>|workups|<ListIndex>|stirring|rate|type"	[label=<enum 'StirringConditionsStirringRateStirringRateType'>,
		node_class="<enum 'StirringConditionsStirringRateStirringRateType'>",
		node_class_as_string="ord_betterproto.StirringConditionsStirringRateStirringRateType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'StirringConditionsStirringRateStirringRateType'>"];
	"<ROOT>|workups|<ListIndex>|stirring|rate" -> "<ROOT>|workups|<ListIndex>|stirring|rate|type"	[label=type];
	"<ROOT>|workups|<ListIndex>|stirring|rate|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|stirring|rate" -> "<ROOT>|workups|<ListIndex>|stirring|rate|details"	[label=details];
	"<ROOT>|workups|<ListIndex>|stirring|rate|rpm"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|stirring|rate" -> "<ROOT>|workups|<ListIndex>|stirring|rate|rpm"	[label=rpm];
	"<ROOT>|outcomes|<ListIndex>"	[label=<class 'ord_betterproto.ReactionOutcome'>,
		node_class="<class 'ord_betterproto.ReactionOutcome'>",
		node_class_as_string="ord_betterproto.ReactionOutcome",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionOutcome'>"];
	"<ROOT>|outcomes" -> "<ROOT>|outcomes|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|reaction_time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|reaction_time"	[label=reaction_time];
	"<ROOT>|outcomes|<ListIndex>|conversion"	[label=<class 'ord_betterproto.Percentage'>,
		node_class="<class 'ord_betterproto.Percentage'>",
		node_class_as_string="ord_betterproto.Percentage",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Percentage'>"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|conversion"	[label=conversion];
	"<ROOT>|outcomes|<ListIndex>|products"	[label="typing.List[ord_betterproto.ProductCompound]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ProductCompound]"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products"	[label=products];
	"<ROOT>|outcomes|<ListIndex>|analyses"	[label="typing.Dict[str, ord_betterproto.Analysis]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|analyses"	[label=analyses];
	"<ROOT>|outcomes|<ListIndex>|reaction_time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|reaction_time" -> "<ROOT>|outcomes|<ListIndex>|reaction_time|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|reaction_time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|reaction_time" -> "<ROOT>|outcomes|<ListIndex>|reaction_time|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|reaction_time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|reaction_time" -> "<ROOT>|outcomes|<ListIndex>|reaction_time|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|conversion|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|conversion" -> "<ROOT>|outcomes|<ListIndex>|conversion|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|conversion|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|conversion" -> "<ROOT>|outcomes|<ListIndex>|conversion|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>"	[label=<class 'ord_betterproto.ProductCompound'>,
		node_class="<class 'ord_betterproto.ProductCompound'>",
		node_class_as_string="ord_betterproto.ProductCompound",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ProductCompound'>"];
	"<ROOT>|outcomes|<ListIndex>|products" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers"	[label="typing.List[ord_betterproto.CompoundIdentifier]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers"	[label=identifiers];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|is_desired_product"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|is_desired_product"	[label=is_desired_product];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements"	[label="typing.List[ord_betterproto.ProductMeasurement]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.ProductMeasurement]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements"	[label=measurements];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|isolated_color"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|isolated_color"	[label=isolated_color];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture"	[label=<class 'ord_betterproto.ProductCompoundTexture'>,
		node_class="<class 'ord_betterproto.ProductCompoundTexture'>",
		node_class_as_string="ord_betterproto.ProductCompoundTexture",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ProductCompoundTexture'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture"	[label=texture];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features"	[label=features];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|reaction_role"	[label=<enum 'ReactionRoleReactionRoleType'>,
		node_class="<enum 'ReactionRoleReactionRoleType'>",
		node_class_as_string="ord_betterproto.ReactionRoleReactionRoleType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|reaction_role"	[label=reaction_role];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>"	[label=<class 'ord_betterproto.CompoundIdentifier'>,
		node_class="<class 'ord_betterproto.CompoundIdentifier'>",
		node_class_as_string="ord_betterproto.CompoundIdentifier",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|type"	[label=<enum 'CompoundIdentifierCompoundIdentifierType'>,
		node_class="<enum 'CompoundIdentifierCompoundIdentifierType'>",
		node_class_as_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>"	[label=<class 'ord_betterproto.ProductMeasurement'>,
		node_class="<class 'ord_betterproto.ProductMeasurement'>",
		node_class_as_string="ord_betterproto.ProductMeasurement",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ProductMeasurement'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|analysis_key"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|analysis_key"	[label=analysis_key];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|type"	[label=<enum 'ProductMeasurementProductMeasurementType'>,
		node_class="<enum 'ProductMeasurementProductMeasurementType'>",
		node_class_as_string="ord_betterproto.ProductMeasurementProductMeasurementType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ProductMeasurementProductMeasurementType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_internal_standard"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_internal_standard"	[label=uses_internal_standard];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|is_normalized"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|is_normalized"	[label=is_normalized];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_authentic_standard"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_authentic_standard"	[label=uses_authentic_standard];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard"	[label=<class 'ord_betterproto.Compound'>,
		node_class="<class 'ord_betterproto.Compound'>",
		node_class_as_string="ord_betterproto.Compound",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard"	[label=authentic_standard];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage"	[label=<class 'ord_betterproto.Percentage'>,
		node_class="<class 'ord_betterproto.Percentage'>",
		node_class_as_string="ord_betterproto.Percentage",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Percentage'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage"	[label=percentage];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value"	[label=<class 'ord_betterproto.FloatValue'>,
		node_class="<class 'ord_betterproto.FloatValue'>",
		node_class_as_string="ord_betterproto.FloatValue",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.FloatValue'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value"	[label=float_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|string_value"	[label=string_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount"	[label=amount];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time"	[label=retention_time];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details"	[label=<class 'ord_betterproto.ProductMeasurementMassSpecMeasurementDetails'>,
		node_class="<class 'ord_betterproto.ProductMeasurementMassSpecMeasurementDetails'>",
		node_class_as_string="ord_betterproto.ProductMeasurementMassSpecMeasurementDetails",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ProductMeasurementMassSpecMeasurementDetails'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details"	[label=mass_spec_details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity"	[label=<class 'ord_betterproto.ProductMeasurementSelectivity'>,
		node_class="<class 'ord_betterproto.ProductMeasurementSelectivity'>",
		node_class_as_string="ord_betterproto.ProductMeasurementSelectivity",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ProductMeasurementSelectivity'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity"	[label=selectivity];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength"	[label=<class 'ord_betterproto.Wavelength'>,
		node_class="<class 'ord_betterproto.Wavelength'>",
		node_class_as_string="ord_betterproto.Wavelength",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Wavelength'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength"	[label=wavelength];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers"	[label="typing.List[ord_betterproto.CompoundIdentifier]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers"	[label=identifiers];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount"	[label=amount];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|reaction_role"	[label=<enum 'ReactionRoleReactionRoleType'>,
		node_class="<enum 'ReactionRoleReactionRoleType'>",
		node_class_as_string="ord_betterproto.ReactionRoleReactionRoleType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|reaction_role"	[label=reaction_role];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|is_limiting"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|is_limiting"	[label=is_limiting];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations"	[label="typing.List[ord_betterproto.CompoundPreparation]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations"	[label=preparations];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source"	[label=<class 'ord_betterproto.CompoundSource'>,
		node_class="<class 'ord_betterproto.CompoundSource'>",
		node_class_as_string="ord_betterproto.CompoundSource",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source"	[label=source];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features"	[label=features];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses"	[label="typing.Dict[str, ord_betterproto.Analysis]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses"	[label=analyses];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>"	[label=<class 'ord_betterproto.CompoundIdentifier'>,
		node_class="<class 'ord_betterproto.CompoundIdentifier'>",
		node_class_as_string="ord_betterproto.CompoundIdentifier",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|type"	[label=<enum 'CompoundIdentifierCompoundIdentifierType'>,
		node_class="<enum 'CompoundIdentifierCompoundIdentifierType'>",
		node_class_as_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass"	[label=mass];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles"	[label=moles];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume"	[label=volume];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>"	[label=<class 'ord_betterproto.CompoundPreparation'>,
		node_class="<class 'ord_betterproto.CompoundPreparation'>",
		node_class_as_string="ord_betterproto.CompoundPreparation",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|type"	[label=<enum 'CompoundPreparationCompoundPreparationType'>,
		node_class="<enum 'CompoundPreparationCompoundPreparationType'>",
		node_class_as_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|vendor"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|vendor"	[label=vendor];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|catalog_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|catalog_id"	[label=catalog_id];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|lot"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|lot"	[label=lot];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>"	[label=<DictKey>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|url"	[label=url];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|description"	[label=description];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|format"	[label=format];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>"	[label=<class 'ord_betterproto.Analysis'>,
		node_class="<class 'ord_betterproto.Analysis'>",
		node_class_as_string="ord_betterproto.Analysis",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>"	[label=<DictKey>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|type"	[label=<enum 'AnalysisAnalysisType'>,
		node_class="<enum 'AnalysisAnalysisType'>",
		node_class_as_string="ord_betterproto.AnalysisAnalysisType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|chmo_id"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|chmo_id"	[label=chmo_id];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|is_of_isolated_species"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|is_of_isolated_species"	[label=is_of_isolated_species];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data"	[label=data];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_manufacturer"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_manufacturer"	[label=instrument_manufacturer];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated"	[label=instrument_last_calibrated];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>"	[label=<DictKey>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|float_\
value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|float_\
value"	[label=float_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|integer_\
value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|integer_\
value"	[label=integer_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|bytes_\
value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|bytes_\
value"	[label=bytes_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|string_\
value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|string_\
value"	[label=string_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|url"	[label=url];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|description"	[label=description];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|format"	[label=format];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|type"	[label=<enum 'ProductMeasurementMassSpecMeasurementDetailsMassSpecMeasurementType'>,
		node_class="<enum 'ProductMeasurementMassSpecMeasurementDetailsMassSpecMeasurementType'>",
		node_class_as_string="ord_betterproto.ProductMeasurementMassSpecMeasurementDetailsMassSpecMeasurementType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ProductMeasurementMassSpecMeasurementDetailsMassSpecMeasurementType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_minimum_mz"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_minimum_mz"	[label=tic_minimum_mz];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_maximum_mz"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_maximum_mz"	[label=tic_maximum_mz];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses"	[label="typing.List[float]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListBuiltinLiteral",
		type_hint="typing.List[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses"	[label=eic_masses];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses|<ListIndex>"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|type"	[label=<enum 'ProductMeasurementSelectivitySelectivityType'>,
		node_class="<enum 'ProductMeasurementSelectivitySelectivityType'>",
		node_class_as_string="ord_betterproto.ProductMeasurementSelectivitySelectivityType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ProductMeasurementSelectivitySelectivityType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|value"	[label=value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|precision"	[label=precision];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|units"	[label=<enum 'WavelengthWavelengthUnit'>,
		node_class="<enum 'WavelengthWavelengthUnit'>",
		node_class_as_string="ord_betterproto.WavelengthWavelengthUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'WavelengthWavelengthUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|units"	[label=units];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|type"	[label=<enum 'ProductCompoundTextureTextureType'>,
		node_class="<enum 'ProductCompoundTextureTextureType'>",
		node_class_as_string="ord_betterproto.ProductCompoundTextureTextureType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ProductCompoundTextureTextureType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>"	[label=<DictKey>];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|url"	[label=url];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|description"	[label=description];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|format"	[label=format];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>"	[label=<class 'ord_betterproto.Analysis'>,
		node_class="<class 'ord_betterproto.Analysis'>",
		node_class_as_string="ord_betterproto.Analysis",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>"	[label=<DictKey>];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|type"	[label=<enum 'AnalysisAnalysisType'>,
		node_class="<enum 'AnalysisAnalysisType'>",
		node_class_as_string="ord_betterproto.AnalysisAnalysisType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|type"	[label=type];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|details"	[label=details];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=chmo_id];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label=is_of_isolated_species];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data"	[label=data];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=instrument_manufacturer];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=instrument_last_calibrated];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<DictKey>];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=url];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=description];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=format];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=value];
	"<ROOT>|provenance|experimenter"	[label=<class 'ord_betterproto.Person'>,
		node_class="<class 'ord_betterproto.Person'>",
		node_class_as_string="ord_betterproto.Person",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Person'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|experimenter"	[label=experimenter];
	"<ROOT>|provenance|city"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|city"	[label=city];
	"<ROOT>|provenance|experiment_start"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|experiment_start"	[label=experiment_start];
	"<ROOT>|provenance|doi"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|doi"	[label=doi];
	"<ROOT>|provenance|patent"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|patent"	[label=patent];
	"<ROOT>|provenance|publication_url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|publication_url"	[label=publication_url];
	"<ROOT>|provenance|record_created"	[label=<class 'ord_betterproto.RecordEvent'>,
		node_class="<class 'ord_betterproto.RecordEvent'>",
		node_class_as_string="ord_betterproto.RecordEvent",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.RecordEvent'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|record_created"	[label=record_created];
	"<ROOT>|provenance|record_modified"	[label="typing.List[ord_betterproto.RecordEvent]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.RecordEvent]"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|record_modified"	[label=record_modified];
	"<ROOT>|provenance|experimenter|username"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|username"	[label=username];
	"<ROOT>|provenance|experimenter|name"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|name"	[label=name];
	"<ROOT>|provenance|experimenter|orcid"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|orcid"	[label=orcid];
	"<ROOT>|provenance|experimenter|organization"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|organization"	[label=organization];
	"<ROOT>|provenance|experimenter|email"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|email"	[label=email];
	"<ROOT>|provenance|experiment_start|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|experiment_start" -> "<ROOT>|provenance|experiment_start|value"	[label=value];
	"<ROOT>|provenance|record_created|time"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|provenance|record_created" -> "<ROOT>|provenance|record_created|time"	[label=time];
	"<ROOT>|provenance|record_created|person"	[label=<class 'ord_betterproto.Person'>,
		node_class="<class 'ord_betterproto.Person'>",
		node_class_as_string="ord_betterproto.Person",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Person'>"];
	"<ROOT>|provenance|record_created" -> "<ROOT>|provenance|record_created|person"	[label=person];
	"<ROOT>|provenance|record_created|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created" -> "<ROOT>|provenance|record_created|details"	[label=details];
	"<ROOT>|provenance|record_created|time|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created|time" -> "<ROOT>|provenance|record_created|time|value"	[label=value];
	"<ROOT>|provenance|record_created|person|username"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|username"	[label=username];
	"<ROOT>|provenance|record_created|person|name"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|name"	[label=name];
	"<ROOT>|provenance|record_created|person|orcid"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|orcid"	[label=orcid];
	"<ROOT>|provenance|record_created|person|organization"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|organization"	[label=organization];
	"<ROOT>|provenance|record_created|person|email"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|email"	[label=email];
	"<ROOT>|provenance|record_modified|<ListIndex>"	[label=<class 'ord_betterproto.RecordEvent'>,
		node_class="<class 'ord_betterproto.RecordEvent'>",
		node_class_as_string="ord_betterproto.RecordEvent",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.RecordEvent'>"];
	"<ROOT>|provenance|record_modified" -> "<ROOT>|provenance|record_modified|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|provenance|record_modified|<ListIndex>|time"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>" -> "<ROOT>|provenance|record_modified|<ListIndex>|time"	[label=time];
	"<ROOT>|provenance|record_modified|<ListIndex>|person"	[label=<class 'ord_betterproto.Person'>,
		node_class="<class 'ord_betterproto.Person'>",
		node_class_as_string="ord_betterproto.Person",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Person'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>" -> "<ROOT>|provenance|record_modified|<ListIndex>|person"	[label=person];
	"<ROOT>|provenance|record_modified|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>" -> "<ROOT>|provenance|record_modified|<ListIndex>|details"	[label=details];
	"<ROOT>|provenance|record_modified|<ListIndex>|time|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|time" -> "<ROOT>|provenance|record_modified|<ListIndex>|time|value"	[label=value];
	"<ROOT>|provenance|record_modified|<ListIndex>|person|username"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|username"	[label=username];
	"<ROOT>|provenance|record_modified|<ListIndex>|person|name"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|name"	[label=name];
	"<ROOT>|provenance|record_modified|<ListIndex>|person|orcid"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|orcid"	[label=orcid];
	"<ROOT>|provenance|record_modified|<ListIndex>|person|organization"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|organization"	[label=organization];
	"<ROOT>|provenance|record_modified|<ListIndex>|person|email"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|email"	[label=email];
}
