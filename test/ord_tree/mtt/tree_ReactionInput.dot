strict digraph "" {
	graph [rankdir=LR,
		splines=curved
	];
	node [label="\N"];
	"<ROOT>"	[label=<class 'ord_betterproto.ReactionInput'>,
		node_class="<class 'ord_betterproto.ReactionInput'>",
		node_class_as_string="ord_betterproto.ReactionInput",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInput'>"];
	"<ROOT>|components"	[label="typing.List[ord_betterproto.Compound]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.Compound]"];
	"<ROOT>" -> "<ROOT>|components"	[label=components];
	"<ROOT>|crude_components"	[label="typing.List[ord_betterproto.CrudeComponent]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CrudeComponent]"];
	"<ROOT>" -> "<ROOT>|crude_components"	[label=crude_components];
	"<ROOT>|addition_order"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>" -> "<ROOT>|addition_order"	[label=addition_order];
	"<ROOT>|addition_time"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>" -> "<ROOT>|addition_time"	[label=addition_time];
	"<ROOT>|addition_speed"	[label=<class 'ord_betterproto.ReactionInputAdditionSpeed'>,
		node_class="<class 'ord_betterproto.ReactionInputAdditionSpeed'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionSpeed",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInputAdditionSpeed'>"];
	"<ROOT>" -> "<ROOT>|addition_speed"	[label=addition_speed];
	"<ROOT>|addition_duration"	[label=<class 'ord_betterproto.Time'>,
		node_class="<class 'ord_betterproto.Time'>",
		node_class_as_string="ord_betterproto.Time",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Time'>"];
	"<ROOT>" -> "<ROOT>|addition_duration"	[label=addition_duration];
	"<ROOT>|flow_rate"	[label=<class 'ord_betterproto.FlowRate'>,
		node_class="<class 'ord_betterproto.FlowRate'>",
		node_class_as_string="ord_betterproto.FlowRate",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.FlowRate'>"];
	"<ROOT>" -> "<ROOT>|flow_rate"	[label=flow_rate];
	"<ROOT>|addition_device"	[label=<class 'ord_betterproto.ReactionInputAdditionDevice'>,
		node_class="<class 'ord_betterproto.ReactionInputAdditionDevice'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionDevice",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.ReactionInputAdditionDevice'>"];
	"<ROOT>" -> "<ROOT>|addition_device"	[label=addition_device];
	"<ROOT>|addition_temperature"	[label=<class 'ord_betterproto.Temperature'>,
		node_class="<class 'ord_betterproto.Temperature'>",
		node_class_as_string="ord_betterproto.Temperature",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>" -> "<ROOT>|addition_temperature"	[label=addition_temperature];
	"<ROOT>|components|<ListIndex>"	[label=<class 'ord_betterproto.Compound'>,
		node_class="<class 'ord_betterproto.Compound'>",
		node_class_as_string="ord_betterproto.Compound",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|components" -> "<ROOT>|components|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|components|<ListIndex>|identifiers"	[label="typing.List[ord_betterproto.CompoundIdentifier]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|identifiers"	[label=identifiers];
	"<ROOT>|components|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|amount"	[label=amount];
	"<ROOT>|components|<ListIndex>|reaction_role"	[label=<enum 'ReactionRoleReactionRoleType'>,
		node_class="<enum 'ReactionRoleReactionRoleType'>",
		node_class_as_string="ord_betterproto.ReactionRoleReactionRoleType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|reaction_role"	[label=reaction_role];
	"<ROOT>|components|<ListIndex>|is_limiting"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|is_limiting"	[label=is_limiting];
	"<ROOT>|components|<ListIndex>|preparations"	[label="typing.List[ord_betterproto.CompoundPreparation]",
		node_class="<class 'list'>",
		node_class_as_string="builtins.list",
		node_class_toth="TypeOfTypeHint.ListOrdMessage",
		type_hint="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|preparations"	[label=preparations];
	"<ROOT>|components|<ListIndex>|source"	[label=<class 'ord_betterproto.CompoundSource'>,
		node_class="<class 'ord_betterproto.CompoundSource'>",
		node_class_as_string="ord_betterproto.CompoundSource",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|source"	[label=source];
	"<ROOT>|components|<ListIndex>|features"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|features"	[label=features];
	"<ROOT>|components|<ListIndex>|analyses"	[label="typing.Dict[str, ord_betterproto.Analysis]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|components|<ListIndex>" -> "<ROOT>|components|<ListIndex>|analyses"	[label=analyses];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>"	[label=<class 'ord_betterproto.CompoundIdentifier'>,
		node_class="<class 'ord_betterproto.CompoundIdentifier'>",
		node_class_as_string="ord_betterproto.CompoundIdentifier",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|components|<ListIndex>|identifiers" -> "<ROOT>|components|<ListIndex>|identifiers|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>|type"	[label=<enum 'CompoundIdentifierCompoundIdentifierType'>,
		node_class="<enum 'CompoundIdentifierCompoundIdentifierType'>",
		node_class_as_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|components|<ListIndex>|identifiers|<ListIndex>|type"	[label=type];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|components|<ListIndex>|identifiers|<ListIndex>|details"	[label=details];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|components|<ListIndex>|identifiers|<ListIndex>|value"	[label=value];
	"<ROOT>|components|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|components|<ListIndex>|amount" -> "<ROOT>|components|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|components|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|components|<ListIndex>|amount" -> "<ROOT>|components|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|components|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|components|<ListIndex>|amount" -> "<ROOT>|components|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|components|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|components|<ListIndex>|amount" -> "<ROOT>|components|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|components|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|components|<ListIndex>|amount" -> "<ROOT>|components|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|components|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|components|<ListIndex>|amount|mass" -> "<ROOT>|components|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|components|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|components|<ListIndex>|amount|mass" -> "<ROOT>|components|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|components|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|components|<ListIndex>|amount|mass" -> "<ROOT>|components|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|components|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|components|<ListIndex>|amount|moles" -> "<ROOT>|components|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|components|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|components|<ListIndex>|amount|moles" -> "<ROOT>|components|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|components|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|components|<ListIndex>|amount|moles" -> "<ROOT>|components|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|components|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|components|<ListIndex>|amount|volume" -> "<ROOT>|components|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|components|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|components|<ListIndex>|amount|volume" -> "<ROOT>|components|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|components|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|components|<ListIndex>|amount|volume" -> "<ROOT>|components|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|components|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|components|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|components|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|components|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>"	[label=<class 'ord_betterproto.CompoundPreparation'>,
		node_class="<class 'ord_betterproto.CompoundPreparation'>",
		node_class_as_string="ord_betterproto.CompoundPreparation",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|components|<ListIndex>|preparations" -> "<ROOT>|components|<ListIndex>|preparations|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>|type"	[label=<enum 'CompoundPreparationCompoundPreparationType'>,
		node_class="<enum 'CompoundPreparationCompoundPreparationType'>",
		node_class_as_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|components|<ListIndex>|preparations|<ListIndex>|type"	[label=type];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|components|<ListIndex>|preparations|<ListIndex>|details"	[label=details];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|components|<ListIndex>|source|vendor"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|source" -> "<ROOT>|components|<ListIndex>|source|vendor"	[label=vendor];
	"<ROOT>|components|<ListIndex>|source|catalog_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|source" -> "<ROOT>|components|<ListIndex>|source|catalog_id"	[label=catalog_id];
	"<ROOT>|components|<ListIndex>|source|lot"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|source" -> "<ROOT>|components|<ListIndex>|source|lot"	[label=lot];
	"<ROOT>|components|<ListIndex>|features|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|components|<ListIndex>|features" -> "<ROOT>|components|<ListIndex>|features|<DictKey>"	[label=<DictKey>];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|url"	[label=url];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|description"	[label=description];
	"<ROOT>|components|<ListIndex>|features|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|components|<ListIndex>|features|<DictKey>|format"	[label=format];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>"	[label=<class 'ord_betterproto.Analysis'>,
		node_class="<class 'ord_betterproto.Analysis'>",
		node_class_as_string="ord_betterproto.Analysis",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|components|<ListIndex>|analyses" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>"	[label=<DictKey>];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|type"	[label=<enum 'AnalysisAnalysisType'>,
		node_class="<enum 'AnalysisAnalysisType'>",
		node_class_as_string="ord_betterproto.AnalysisAnalysisType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|type"	[label=type];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|details"	[label=details];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[label=chmo_id];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[label=is_of_isolated_species];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data"	[label="typing.Dict[str, ord_betterproto.Data]",
		node_class="<class 'dict'>",
		node_class_as_string="builtins.dict",
		node_class_toth="TypeOfTypeHint.DictOrdMessage",
		type_hint="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data"	[label=data];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[label=instrument_manufacturer];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=<class 'ord_betterproto.DateTime'>,
		node_class="<class 'ord_betterproto.DateTime'>",
		node_class_as_string="ord_betterproto.DateTime",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[label=instrument_last_calibrated];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<class 'ord_betterproto.Data'>,
		node_class="<class 'ord_betterproto.Data'>",
		node_class_as_string="ord_betterproto.Data",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Data'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[label=<DictKey>];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=<class 'float'>,
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'float'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[label=float_value];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=<class 'int'>,
		node_class="<class 'int'>",
		node_class_as_string="builtins.int",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'int'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[label=integer_value];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=<class 'bytes'>,
		node_class="<class 'bytes'>",
		node_class_as_string="builtins.bytes",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'bytes'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[label=bytes_value];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[label=string_value];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[label=url];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[label=description];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[label=format];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[label=value];
	"<ROOT>|crude_components|<ListIndex>"	[label=<class 'ord_betterproto.CrudeComponent'>,
		node_class="<class 'ord_betterproto.CrudeComponent'>",
		node_class_as_string="ord_betterproto.CrudeComponent",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.CrudeComponent'>"];
	"<ROOT>|crude_components" -> "<ROOT>|crude_components|<ListIndex>"	[label=<ListIndex>];
	"<ROOT>|crude_components|<ListIndex>|reaction_id"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|crude_components|<ListIndex>" -> "<ROOT>|crude_components|<ListIndex>|reaction_id"	[label=reaction_id];
	"<ROOT>|crude_components|<ListIndex>|includes_workup"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|crude_components|<ListIndex>" -> "<ROOT>|crude_components|<ListIndex>|includes_workup"	[label=includes_workup];
	"<ROOT>|crude_components|<ListIndex>|has_derived_amount"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|crude_components|<ListIndex>" -> "<ROOT>|crude_components|<ListIndex>|has_derived_amount"	[label=has_derived_amount];
	"<ROOT>|crude_components|<ListIndex>|amount"	[label=<class 'ord_betterproto.Amount'>,
		node_class="<class 'ord_betterproto.Amount'>",
		node_class_as_string="ord_betterproto.Amount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|crude_components|<ListIndex>" -> "<ROOT>|crude_components|<ListIndex>|amount"	[label=amount];
	"<ROOT>|crude_components|<ListIndex>|amount|mass"	[label=<class 'ord_betterproto.Mass'>,
		node_class="<class 'ord_betterproto.Mass'>",
		node_class_as_string="ord_betterproto.Mass",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|crude_components|<ListIndex>|amount" -> "<ROOT>|crude_components|<ListIndex>|amount|mass"	[label=mass];
	"<ROOT>|crude_components|<ListIndex>|amount|moles"	[label=<class 'ord_betterproto.Moles'>,
		node_class="<class 'ord_betterproto.Moles'>",
		node_class_as_string="ord_betterproto.Moles",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|crude_components|<ListIndex>|amount" -> "<ROOT>|crude_components|<ListIndex>|amount|moles"	[label=moles];
	"<ROOT>|crude_components|<ListIndex>|amount|volume"	[label=<class 'ord_betterproto.Volume'>,
		node_class="<class 'ord_betterproto.Volume'>",
		node_class_as_string="ord_betterproto.Volume",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|crude_components|<ListIndex>|amount" -> "<ROOT>|crude_components|<ListIndex>|amount|volume"	[label=volume];
	"<ROOT>|crude_components|<ListIndex>|amount|unmeasured"	[label=<class 'ord_betterproto.UnmeasuredAmount'>,
		node_class="<class 'ord_betterproto.UnmeasuredAmount'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmount",
		node_class_toth="TypeOfTypeHint.OrdMessage",
		type_hint="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|crude_components|<ListIndex>|amount" -> "<ROOT>|crude_components|<ListIndex>|amount|unmeasured"	[label=unmeasured];
	"<ROOT>|crude_components|<ListIndex>|amount|volume_includes_solutes"	[label="typing.Optional[bool]",
		node_class="<class 'bool'>",
		node_class_as_string="builtins.bool",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[bool]"];
	"<ROOT>|crude_components|<ListIndex>|amount" -> "<ROOT>|crude_components|<ListIndex>|amount|volume_includes_solutes"	[label=volume_includes_solutes];
	"<ROOT>|crude_components|<ListIndex>|amount|mass|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|crude_components|<ListIndex>|amount|mass|value"	[label=value];
	"<ROOT>|crude_components|<ListIndex>|amount|mass|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|crude_components|<ListIndex>|amount|mass|precision"	[label=precision];
	"<ROOT>|crude_components|<ListIndex>|amount|mass|units"	[label=<enum 'MassMassUnit'>,
		node_class="<enum 'MassMassUnit'>",
		node_class_as_string="ord_betterproto.MassMassUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MassMassUnit'>"];
	"<ROOT>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|crude_components|<ListIndex>|amount|mass|units"	[label=units];
	"<ROOT>|crude_components|<ListIndex>|amount|moles|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|crude_components|<ListIndex>|amount|moles|value"	[label=value];
	"<ROOT>|crude_components|<ListIndex>|amount|moles|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|crude_components|<ListIndex>|amount|moles|precision"	[label=precision];
	"<ROOT>|crude_components|<ListIndex>|amount|moles|units"	[label=<enum 'MolesMolesUnit'>,
		node_class="<enum 'MolesMolesUnit'>",
		node_class_as_string="ord_betterproto.MolesMolesUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'MolesMolesUnit'>"];
	"<ROOT>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|crude_components|<ListIndex>|amount|moles|units"	[label=units];
	"<ROOT>|crude_components|<ListIndex>|amount|volume|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|crude_components|<ListIndex>|amount|volume|value"	[label=value];
	"<ROOT>|crude_components|<ListIndex>|amount|volume|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|crude_components|<ListIndex>|amount|volume|precision"	[label=precision];
	"<ROOT>|crude_components|<ListIndex>|amount|volume|units"	[label=<enum 'VolumeVolumeUnit'>,
		node_class="<enum 'VolumeVolumeUnit'>",
		node_class_as_string="ord_betterproto.VolumeVolumeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|crude_components|<ListIndex>|amount|volume|units"	[label=units];
	"<ROOT>|crude_components|<ListIndex>|amount|unmeasured|type"	[label=<enum 'UnmeasuredAmountUnmeasuredAmountType'>,
		node_class="<enum 'UnmeasuredAmountUnmeasuredAmountType'>",
		node_class_as_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|crude_components|<ListIndex>|amount|unmeasured|type"	[label=type];
	"<ROOT>|crude_components|<ListIndex>|amount|unmeasured|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|crude_components|<ListIndex>|amount|unmeasured|details"	[label=details];
	"<ROOT>|addition_time|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|addition_time" -> "<ROOT>|addition_time|value"	[label=value];
	"<ROOT>|addition_time|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|addition_time" -> "<ROOT>|addition_time|precision"	[label=precision];
	"<ROOT>|addition_time|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|addition_time" -> "<ROOT>|addition_time|units"	[label=units];
	"<ROOT>|addition_speed|type"	[label=<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>,
		node_class="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionSpeedAdditionSpeedType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>"];
	"<ROOT>|addition_speed" -> "<ROOT>|addition_speed|type"	[label=type];
	"<ROOT>|addition_speed|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|addition_speed" -> "<ROOT>|addition_speed|details"	[label=details];
	"<ROOT>|addition_duration|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|addition_duration" -> "<ROOT>|addition_duration|value"	[label=value];
	"<ROOT>|addition_duration|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|addition_duration" -> "<ROOT>|addition_duration|precision"	[label=precision];
	"<ROOT>|addition_duration|units"	[label=<enum 'TimeTimeUnit'>,
		node_class="<enum 'TimeTimeUnit'>",
		node_class_as_string="ord_betterproto.TimeTimeUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TimeTimeUnit'>"];
	"<ROOT>|addition_duration" -> "<ROOT>|addition_duration|units"	[label=units];
	"<ROOT>|flow_rate|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|flow_rate" -> "<ROOT>|flow_rate|value"	[label=value];
	"<ROOT>|flow_rate|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|flow_rate" -> "<ROOT>|flow_rate|precision"	[label=precision];
	"<ROOT>|flow_rate|units"	[label=<enum 'FlowRateFlowRateUnit'>,
		node_class="<enum 'FlowRateFlowRateUnit'>",
		node_class_as_string="ord_betterproto.FlowRateFlowRateUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'FlowRateFlowRateUnit'>"];
	"<ROOT>|flow_rate" -> "<ROOT>|flow_rate|units"	[label=units];
	"<ROOT>|addition_device|type"	[label=<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>,
		node_class="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>",
		node_class_as_string="ord_betterproto.ReactionInputAdditionDeviceAdditionDeviceType",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>"];
	"<ROOT>|addition_device" -> "<ROOT>|addition_device|type"	[label=type];
	"<ROOT>|addition_device|details"	[label=<class 'str'>,
		node_class="<class 'str'>",
		node_class_as_string="builtins.str",
		node_class_toth="TypeOfTypeHint.BuiltinLiteral",
		type_hint="<class 'str'>"];
	"<ROOT>|addition_device" -> "<ROOT>|addition_device|details"	[label=details];
	"<ROOT>|addition_temperature|value"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|addition_temperature" -> "<ROOT>|addition_temperature|value"	[label=value];
	"<ROOT>|addition_temperature|precision"	[label="typing.Optional[float]",
		node_class="<class 'float'>",
		node_class_as_string="builtins.float",
		node_class_toth="TypeOfTypeHint.OptionalLiteral",
		type_hint="typing.Optional[float]"];
	"<ROOT>|addition_temperature" -> "<ROOT>|addition_temperature|precision"	[label=precision];
	"<ROOT>|addition_temperature|units"	[label=<enum 'TemperatureTemperatureUnit'>,
		node_class="<enum 'TemperatureTemperatureUnit'>",
		node_class_as_string="ord_betterproto.TemperatureTemperatureUnit",
		node_class_toth="TypeOfTypeHint.OrdEnum",
		type_hint="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|addition_temperature" -> "<ROOT>|addition_temperature|units"	[label=units];
}
