strict digraph "" {
	graph [rankdir=LR,
		splines=curved
	];
	"<ROOT>"	[mtt_class_string="ord_betterproto.Reaction",
		mtt_node_name="<ROOT>",
		mtt_parent=None,
		mtt_relation_to_parent=None,
		mtt_type_hint_string="<class 'ord_betterproto.Reaction'>"];
	"<ROOT>|identifiers"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|identifiers",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=identifiers,
		mtt_type_hint_string="typing.List[ord_betterproto.ReactionIdentifier]"];
	"<ROOT>" -> "<ROOT>|identifiers";
	"<ROOT>|inputs"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|inputs",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=inputs,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.ReactionInput]"];
	"<ROOT>" -> "<ROOT>|inputs";
	"<ROOT>|setup"	[mtt_class_string="ord_betterproto.ReactionSetup",
		mtt_node_name="<ROOT>|setup",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=setup,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionSetup'>"];
	"<ROOT>" -> "<ROOT>|setup";
	"<ROOT>|conditions"	[mtt_class_string="ord_betterproto.ReactionConditions",
		mtt_node_name="<ROOT>|conditions",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=conditions,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionConditions'>"];
	"<ROOT>" -> "<ROOT>|conditions";
	"<ROOT>|notes"	[mtt_class_string="ord_betterproto.ReactionNotes",
		mtt_node_name="<ROOT>|notes",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=notes,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionNotes'>"];
	"<ROOT>" -> "<ROOT>|notes";
	"<ROOT>|observations"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|observations",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=observations,
		mtt_type_hint_string="typing.List[ord_betterproto.ReactionObservation]"];
	"<ROOT>" -> "<ROOT>|observations";
	"<ROOT>|workups"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|workups",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=workups,
		mtt_type_hint_string="typing.List[ord_betterproto.ReactionWorkup]"];
	"<ROOT>" -> "<ROOT>|workups";
	"<ROOT>|outcomes"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=outcomes,
		mtt_type_hint_string="typing.List[ord_betterproto.ReactionOutcome]"];
	"<ROOT>" -> "<ROOT>|outcomes";
	"<ROOT>|provenance"	[mtt_class_string="ord_betterproto.ReactionProvenance",
		mtt_node_name="<ROOT>|provenance",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=provenance,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionProvenance'>"];
	"<ROOT>" -> "<ROOT>|provenance";
	"<ROOT>|reaction_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|reaction_id",
		mtt_parent="<ROOT>",
		mtt_relation_to_parent=reaction_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>" -> "<ROOT>|reaction_id";
	"<ROOT>|identifiers|<ListIndex>"	[mtt_class_string="ord_betterproto.ReactionIdentifier",
		mtt_node_name="<ROOT>|identifiers|<ListIndex>",
		mtt_parent="<ROOT>|identifiers",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ReactionIdentifier'>"];
	"<ROOT>|identifiers" -> "<ROOT>|identifiers|<ListIndex>";
	"<ROOT>|identifiers|<ListIndex>|type"	[mtt_class_string="ord_betterproto.ReactionIdentifierReactionIdentifierType",
		mtt_node_name="<ROOT>|identifiers|<ListIndex>|type",
		mtt_parent="<ROOT>|identifiers|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionIdentifierReactionIdentifierType'>"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|type";
	"<ROOT>|identifiers|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|identifiers|<ListIndex>|details",
		mtt_parent="<ROOT>|identifiers|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|details";
	"<ROOT>|identifiers|<ListIndex>|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|identifiers|<ListIndex>|value",
		mtt_parent="<ROOT>|identifiers|<ListIndex>",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|value";
	"<ROOT>|identifiers|<ListIndex>|is_mapped"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|identifiers|<ListIndex>|is_mapped",
		mtt_parent="<ROOT>|identifiers|<ListIndex>",
		mtt_relation_to_parent=is_mapped,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|identifiers|<ListIndex>" -> "<ROOT>|identifiers|<ListIndex>|is_mapped";
	"<ROOT>|inputs|<DictKey>"	[mtt_class_string="ord_betterproto.ReactionInput",
		mtt_node_name="<ROOT>|inputs|<DictKey>",
		mtt_parent="<ROOT>|inputs",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.ReactionInput'>"];
	"<ROOT>|inputs" -> "<ROOT>|inputs|<DictKey>";
	"<ROOT>|inputs|<DictKey>|components"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=components,
		mtt_type_hint_string="typing.List[ord_betterproto.Compound]"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components";
	"<ROOT>|inputs|<DictKey>|crude_components"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=crude_components,
		mtt_type_hint_string="typing.List[ord_betterproto.CrudeComponent]"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|crude_components";
	"<ROOT>|inputs|<DictKey>|addition_order"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_order",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=addition_order,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_order";
	"<ROOT>|inputs|<DictKey>|addition_time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_time",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=addition_time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_time";
	"<ROOT>|inputs|<DictKey>|addition_speed"	[mtt_class_string="ord_betterproto.ReactionInputAdditionSpeed",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_speed",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=addition_speed,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionInputAdditionSpeed'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_speed";
	"<ROOT>|inputs|<DictKey>|addition_duration"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_duration",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=addition_duration,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_duration";
	"<ROOT>|inputs|<DictKey>|flow_rate"	[mtt_class_string="ord_betterproto.FlowRate",
		mtt_node_name="<ROOT>|inputs|<DictKey>|flow_rate",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=flow_rate,
		mtt_type_hint_string="<class 'ord_betterproto.FlowRate'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|flow_rate";
	"<ROOT>|inputs|<DictKey>|addition_device"	[mtt_class_string="ord_betterproto.ReactionInputAdditionDevice",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_device",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=addition_device,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionInputAdditionDevice'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_device";
	"<ROOT>|inputs|<DictKey>|addition_temperature"	[mtt_class_string="ord_betterproto.Temperature",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_temperature",
		mtt_parent="<ROOT>|inputs|<DictKey>",
		mtt_relation_to_parent=addition_temperature,
		mtt_type_hint_string="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|inputs|<DictKey>" -> "<ROOT>|inputs|<DictKey>|addition_temperature";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>"	[mtt_class_string="ord_betterproto.Compound",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_parent="<ROOT>|inputs|<DictKey>|components",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|inputs|<DictKey>|components" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=identifiers,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|reaction_role"	[mtt_class_string="ord_betterproto.ReactionRoleReactionRoleType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|reaction_role",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=reaction_role,
		mtt_type_hint_string="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|reaction_role";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|is_limiting"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|is_limiting",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=is_limiting,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|is_limiting";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=preparations,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source"	[mtt_class_string="ord_betterproto.CompoundSource",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=source,
		mtt_type_hint_string="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=features,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>",
		mtt_relation_to_parent=analyses,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundIdentifier",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|type";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|details";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|identifiers|<ListIndex>|value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume_includes_solutes";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|precision";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|mass|units";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|precision";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|moles|units";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|precision";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|volume|units";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|type";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|amount|unmeasured|details";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundPreparation",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|type";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|details";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|reaction_id",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>",
		mtt_relation_to_parent=reaction_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|preparations|<ListIndex>|reaction_id";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|vendor"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|vendor",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source",
		mtt_relation_to_parent=vendor,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|vendor";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|catalog_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|catalog_id",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source",
		mtt_relation_to_parent=catalog_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|catalog_id";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|lot"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|lot",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|source",
		mtt_relation_to_parent=lot,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|source" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|source|lot";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|float_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|float_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|integer_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|integer_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|bytes_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|string_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|string_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|url",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|url";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|description",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|description";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|format",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|features|<DictKey>|format";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>"	[mtt_class_string="ord_betterproto.Analysis",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|type"	[mtt_class_string="ord_betterproto.AnalysisAnalysisType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|type";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|details";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|chmo_id",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=chmo_id,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|chmo_id";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=is_of_isolated_species,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=data,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_manufacturer,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_last_calibrated,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format";
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|inputs|<DictKey>|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>"	[mtt_class_string="ord_betterproto.CrudeComponent",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CrudeComponent'>"];
	"<ROOT>|inputs|<DictKey>|crude_components" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|reaction_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|reaction_id",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>",
		mtt_relation_to_parent=reaction_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|reaction_id";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|includes_workup"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|includes_workup",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>",
		mtt_relation_to_parent=includes_workup,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|includes_workup";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|has_derived_amount"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|has_derived_amount",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>",
		mtt_relation_to_parent=has_derived_amount,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|has_derived_amount";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume_includes_solutes";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|value";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|precision";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|mass|units";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|value";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|precision";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|moles|units";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|value";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|precision";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|volume|units";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|type";
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|inputs|<DictKey>|crude_components|<ListIndex>|amount|unmeasured|details";
	"<ROOT>|inputs|<DictKey>|addition_time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_time|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_time" -> "<ROOT>|inputs|<DictKey>|addition_time|value";
	"<ROOT>|inputs|<DictKey>|addition_time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_time|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_time" -> "<ROOT>|inputs|<DictKey>|addition_time|precision";
	"<ROOT>|inputs|<DictKey>|addition_time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_time|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|inputs|<DictKey>|addition_time" -> "<ROOT>|inputs|<DictKey>|addition_time|units";
	"<ROOT>|inputs|<DictKey>|addition_speed|type"	[mtt_class_string="ord_betterproto.ReactionInputAdditionSpeedAdditionSpeedType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_speed|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_speed",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>"];
	"<ROOT>|inputs|<DictKey>|addition_speed" -> "<ROOT>|inputs|<DictKey>|addition_speed|type";
	"<ROOT>|inputs|<DictKey>|addition_speed|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_speed|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_speed",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|addition_speed" -> "<ROOT>|inputs|<DictKey>|addition_speed|details";
	"<ROOT>|inputs|<DictKey>|addition_duration|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_duration|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_duration",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_duration" -> "<ROOT>|inputs|<DictKey>|addition_duration|value";
	"<ROOT>|inputs|<DictKey>|addition_duration|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_duration|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_duration",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_duration" -> "<ROOT>|inputs|<DictKey>|addition_duration|precision";
	"<ROOT>|inputs|<DictKey>|addition_duration|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_duration|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_duration",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|inputs|<DictKey>|addition_duration" -> "<ROOT>|inputs|<DictKey>|addition_duration|units";
	"<ROOT>|inputs|<DictKey>|flow_rate|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|flow_rate|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|flow_rate",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|flow_rate" -> "<ROOT>|inputs|<DictKey>|flow_rate|value";
	"<ROOT>|inputs|<DictKey>|flow_rate|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|flow_rate|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|flow_rate",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|flow_rate" -> "<ROOT>|inputs|<DictKey>|flow_rate|precision";
	"<ROOT>|inputs|<DictKey>|flow_rate|units"	[mtt_class_string="ord_betterproto.FlowRateFlowRateUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|flow_rate|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|flow_rate",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'FlowRateFlowRateUnit'>"];
	"<ROOT>|inputs|<DictKey>|flow_rate" -> "<ROOT>|inputs|<DictKey>|flow_rate|units";
	"<ROOT>|inputs|<DictKey>|addition_device|type"	[mtt_class_string="ord_betterproto.ReactionInputAdditionDeviceAdditionDeviceType",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_device|type",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_device",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>"];
	"<ROOT>|inputs|<DictKey>|addition_device" -> "<ROOT>|inputs|<DictKey>|addition_device|type";
	"<ROOT>|inputs|<DictKey>|addition_device|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_device|details",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_device",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|inputs|<DictKey>|addition_device" -> "<ROOT>|inputs|<DictKey>|addition_device|details";
	"<ROOT>|inputs|<DictKey>|addition_temperature|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_temperature|value",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_temperature",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_temperature" -> "<ROOT>|inputs|<DictKey>|addition_temperature|value";
	"<ROOT>|inputs|<DictKey>|addition_temperature|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_temperature|precision",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_temperature",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|inputs|<DictKey>|addition_temperature" -> "<ROOT>|inputs|<DictKey>|addition_temperature|precision";
	"<ROOT>|inputs|<DictKey>|addition_temperature|units"	[mtt_class_string="ord_betterproto.TemperatureTemperatureUnit",
		mtt_node_name="<ROOT>|inputs|<DictKey>|addition_temperature|units",
		mtt_parent="<ROOT>|inputs|<DictKey>|addition_temperature",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|inputs|<DictKey>|addition_temperature" -> "<ROOT>|inputs|<DictKey>|addition_temperature|units";
	"<ROOT>|setup|vessel"	[mtt_class_string="ord_betterproto.Vessel",
		mtt_node_name="<ROOT>|setup|vessel",
		mtt_parent="<ROOT>|setup",
		mtt_relation_to_parent=vessel,
		mtt_type_hint_string="<class 'ord_betterproto.Vessel'>"];
	"<ROOT>|setup" -> "<ROOT>|setup|vessel";
	"<ROOT>|setup|is_automated"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|setup|is_automated",
		mtt_parent="<ROOT>|setup",
		mtt_relation_to_parent=is_automated,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|setup" -> "<ROOT>|setup|is_automated";
	"<ROOT>|setup|automation_platform"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|automation_platform",
		mtt_parent="<ROOT>|setup",
		mtt_relation_to_parent=automation_platform,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup" -> "<ROOT>|setup|automation_platform";
	"<ROOT>|setup|automation_code"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|setup|automation_code",
		mtt_parent="<ROOT>|setup",
		mtt_relation_to_parent=automation_code,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|setup" -> "<ROOT>|setup|automation_code";
	"<ROOT>|setup|environment"	[mtt_class_string="ord_betterproto.ReactionSetupReactionEnvironment",
		mtt_node_name="<ROOT>|setup|environment",
		mtt_parent="<ROOT>|setup",
		mtt_relation_to_parent=environment,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionSetupReactionEnvironment'>"];
	"<ROOT>|setup" -> "<ROOT>|setup|environment";
	"<ROOT>|setup|vessel|type"	[mtt_class_string="ord_betterproto.VesselVesselType",
		mtt_node_name="<ROOT>|setup|vessel|type",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'VesselVesselType'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|type";
	"<ROOT>|setup|vessel|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|vessel|details",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|details";
	"<ROOT>|setup|vessel|material"	[mtt_class_string="ord_betterproto.VesselMaterial",
		mtt_node_name="<ROOT>|setup|vessel|material",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=material,
		mtt_type_hint_string="<class 'ord_betterproto.VesselMaterial'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|material";
	"<ROOT>|setup|vessel|preparations"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|setup|vessel|preparations",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=preparations,
		mtt_type_hint_string="typing.List[ord_betterproto.VesselPreparation]"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|preparations";
	"<ROOT>|setup|vessel|attachments"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|setup|vessel|attachments",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=attachments,
		mtt_type_hint_string="typing.List[ord_betterproto.VesselAttachment]"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|attachments";
	"<ROOT>|setup|vessel|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|setup|vessel|volume",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|volume";
	"<ROOT>|setup|vessel|plate_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|vessel|plate_id",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=plate_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|plate_id";
	"<ROOT>|setup|vessel|plate_position"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|vessel|plate_position",
		mtt_parent="<ROOT>|setup|vessel",
		mtt_relation_to_parent=plate_position,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|vessel" -> "<ROOT>|setup|vessel|plate_position";
	"<ROOT>|setup|vessel|material|type"	[mtt_class_string="ord_betterproto.VesselMaterialVesselMaterialType",
		mtt_node_name="<ROOT>|setup|vessel|material|type",
		mtt_parent="<ROOT>|setup|vessel|material",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'VesselMaterialVesselMaterialType'>"];
	"<ROOT>|setup|vessel|material" -> "<ROOT>|setup|vessel|material|type";
	"<ROOT>|setup|vessel|material|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|vessel|material|details",
		mtt_parent="<ROOT>|setup|vessel|material",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|vessel|material" -> "<ROOT>|setup|vessel|material|details";
	"<ROOT>|setup|vessel|preparations|<ListIndex>"	[mtt_class_string="ord_betterproto.VesselPreparation",
		mtt_node_name="<ROOT>|setup|vessel|preparations|<ListIndex>",
		mtt_parent="<ROOT>|setup|vessel|preparations",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.VesselPreparation'>"];
	"<ROOT>|setup|vessel|preparations" -> "<ROOT>|setup|vessel|preparations|<ListIndex>";
	"<ROOT>|setup|vessel|preparations|<ListIndex>|type"	[mtt_class_string="ord_betterproto.VesselPreparationVesselPreparationType",
		mtt_node_name="<ROOT>|setup|vessel|preparations|<ListIndex>|type",
		mtt_parent="<ROOT>|setup|vessel|preparations|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'VesselPreparationVesselPreparationType'>"];
	"<ROOT>|setup|vessel|preparations|<ListIndex>" -> "<ROOT>|setup|vessel|preparations|<ListIndex>|type";
	"<ROOT>|setup|vessel|preparations|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|vessel|preparations|<ListIndex>|details",
		mtt_parent="<ROOT>|setup|vessel|preparations|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|vessel|preparations|<ListIndex>" -> "<ROOT>|setup|vessel|preparations|<ListIndex>|details";
	"<ROOT>|setup|vessel|attachments|<ListIndex>"	[mtt_class_string="ord_betterproto.VesselAttachment",
		mtt_node_name="<ROOT>|setup|vessel|attachments|<ListIndex>",
		mtt_parent="<ROOT>|setup|vessel|attachments",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.VesselAttachment'>"];
	"<ROOT>|setup|vessel|attachments" -> "<ROOT>|setup|vessel|attachments|<ListIndex>";
	"<ROOT>|setup|vessel|attachments|<ListIndex>|type"	[mtt_class_string="ord_betterproto.VesselAttachmentVesselAttachmentType",
		mtt_node_name="<ROOT>|setup|vessel|attachments|<ListIndex>|type",
		mtt_parent="<ROOT>|setup|vessel|attachments|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'VesselAttachmentVesselAttachmentType'>"];
	"<ROOT>|setup|vessel|attachments|<ListIndex>" -> "<ROOT>|setup|vessel|attachments|<ListIndex>|type";
	"<ROOT>|setup|vessel|attachments|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|vessel|attachments|<ListIndex>|details",
		mtt_parent="<ROOT>|setup|vessel|attachments|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|vessel|attachments|<ListIndex>" -> "<ROOT>|setup|vessel|attachments|<ListIndex>|details";
	"<ROOT>|setup|vessel|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|setup|vessel|volume|value",
		mtt_parent="<ROOT>|setup|vessel|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|setup|vessel|volume" -> "<ROOT>|setup|vessel|volume|value";
	"<ROOT>|setup|vessel|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|setup|vessel|volume|precision",
		mtt_parent="<ROOT>|setup|vessel|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|setup|vessel|volume" -> "<ROOT>|setup|vessel|volume|precision";
	"<ROOT>|setup|vessel|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|setup|vessel|volume|units",
		mtt_parent="<ROOT>|setup|vessel|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|setup|vessel|volume" -> "<ROOT>|setup|vessel|volume|units";
	"<ROOT>|setup|automation_code|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>",
		mtt_parent="<ROOT>|setup|automation_code",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|setup|automation_code" -> "<ROOT>|setup|automation_code|<DictKey>";
	"<ROOT>|setup|automation_code|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|float_value",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|float_value";
	"<ROOT>|setup|automation_code|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|integer_value",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|integer_value";
	"<ROOT>|setup|automation_code|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|bytes_value";
	"<ROOT>|setup|automation_code|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|string_value",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|string_value";
	"<ROOT>|setup|automation_code|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|url",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|url";
	"<ROOT>|setup|automation_code|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|description",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|description";
	"<ROOT>|setup|automation_code|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|automation_code|<DictKey>|format",
		mtt_parent="<ROOT>|setup|automation_code|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|automation_code|<DictKey>" -> "<ROOT>|setup|automation_code|<DictKey>|format";
	"<ROOT>|setup|environment|type"	[mtt_class_string="ord_betterproto.ReactionSetupReactionEnvironmentReactionEnvironmentType",
		mtt_node_name="<ROOT>|setup|environment|type",
		mtt_parent="<ROOT>|setup|environment",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionSetupReactionEnvironmentReactionEnvironmentType'>"];
	"<ROOT>|setup|environment" -> "<ROOT>|setup|environment|type";
	"<ROOT>|setup|environment|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|setup|environment|details",
		mtt_parent="<ROOT>|setup|environment",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|setup|environment" -> "<ROOT>|setup|environment|details";
	"<ROOT>|conditions|temperature"	[mtt_class_string="ord_betterproto.TemperatureConditions",
		mtt_node_name="<ROOT>|conditions|temperature",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=temperature,
		mtt_type_hint_string="<class 'ord_betterproto.TemperatureConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|temperature";
	"<ROOT>|conditions|pressure"	[mtt_class_string="ord_betterproto.PressureConditions",
		mtt_node_name="<ROOT>|conditions|pressure",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=pressure,
		mtt_type_hint_string="<class 'ord_betterproto.PressureConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|pressure";
	"<ROOT>|conditions|stirring"	[mtt_class_string="ord_betterproto.StirringConditions",
		mtt_node_name="<ROOT>|conditions|stirring",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=stirring,
		mtt_type_hint_string="<class 'ord_betterproto.StirringConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|stirring";
	"<ROOT>|conditions|illumination"	[mtt_class_string="ord_betterproto.IlluminationConditions",
		mtt_node_name="<ROOT>|conditions|illumination",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=illumination,
		mtt_type_hint_string="<class 'ord_betterproto.IlluminationConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|illumination";
	"<ROOT>|conditions|electrochemistry"	[mtt_class_string="ord_betterproto.ElectrochemistryConditions",
		mtt_node_name="<ROOT>|conditions|electrochemistry",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=electrochemistry,
		mtt_type_hint_string="<class 'ord_betterproto.ElectrochemistryConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|electrochemistry";
	"<ROOT>|conditions|flow"	[mtt_class_string="ord_betterproto.FlowConditions",
		mtt_node_name="<ROOT>|conditions|flow",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=flow,
		mtt_type_hint_string="<class 'ord_betterproto.FlowConditions'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|flow";
	"<ROOT>|conditions|reflux"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|conditions|reflux",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=reflux,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|reflux";
	"<ROOT>|conditions|ph"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|ph",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=ph,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|ph";
	"<ROOT>|conditions|conditions_are_dynamic"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|conditions|conditions_are_dynamic",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=conditions_are_dynamic,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|conditions_are_dynamic";
	"<ROOT>|conditions|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|details",
		mtt_parent="<ROOT>|conditions",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions" -> "<ROOT>|conditions|details";
	"<ROOT>|conditions|temperature|control"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureControl",
		mtt_node_name="<ROOT>|conditions|temperature|control",
		mtt_parent="<ROOT>|conditions|temperature",
		mtt_relation_to_parent=control,
		mtt_type_hint_string="<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>"];
	"<ROOT>|conditions|temperature" -> "<ROOT>|conditions|temperature|control";
	"<ROOT>|conditions|temperature|setpoint"	[mtt_class_string="ord_betterproto.Temperature",
		mtt_node_name="<ROOT>|conditions|temperature|setpoint",
		mtt_parent="<ROOT>|conditions|temperature",
		mtt_relation_to_parent=setpoint,
		mtt_type_hint_string="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|conditions|temperature" -> "<ROOT>|conditions|temperature|setpoint";
	"<ROOT>|conditions|temperature|measurements"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|conditions|temperature|measurements",
		mtt_parent="<ROOT>|conditions|temperature",
		mtt_relation_to_parent=measurements,
		mtt_type_hint_string="typing.List[ord_betterproto.TemperatureConditionsTemperatureMeasurement]"];
	"<ROOT>|conditions|temperature" -> "<ROOT>|conditions|temperature|measurements";
	"<ROOT>|conditions|temperature|control|type"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureControlTemperatureControlType",
		mtt_node_name="<ROOT>|conditions|temperature|control|type",
		mtt_parent="<ROOT>|conditions|temperature|control",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>"];
	"<ROOT>|conditions|temperature|control" -> "<ROOT>|conditions|temperature|control|type";
	"<ROOT>|conditions|temperature|control|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|temperature|control|details",
		mtt_parent="<ROOT>|conditions|temperature|control",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|temperature|control" -> "<ROOT>|conditions|temperature|control|details";
	"<ROOT>|conditions|temperature|setpoint|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|temperature|setpoint|value",
		mtt_parent="<ROOT>|conditions|temperature|setpoint",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|setpoint" -> "<ROOT>|conditions|temperature|setpoint|value";
	"<ROOT>|conditions|temperature|setpoint|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|temperature|setpoint|precision",
		mtt_parent="<ROOT>|conditions|temperature|setpoint",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|setpoint" -> "<ROOT>|conditions|temperature|setpoint|precision";
	"<ROOT>|conditions|temperature|setpoint|units"	[mtt_class_string="ord_betterproto.TemperatureTemperatureUnit",
		mtt_node_name="<ROOT>|conditions|temperature|setpoint|units",
		mtt_parent="<ROOT>|conditions|temperature|setpoint",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|conditions|temperature|setpoint" -> "<ROOT>|conditions|temperature|setpoint|units";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureMeasurement",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>",
		mtt_parent="<ROOT>|conditions|temperature|measurements",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>"];
	"<ROOT>|conditions|temperature|measurements" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|type"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|type",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|type";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|details",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|details";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|time",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature"	[mtt_class_string="ord_betterproto.Temperature",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=temperature,
		mtt_type_hint_string="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|time|value",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time|value";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|time|precision",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>|time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time|precision";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|time|units",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>|time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|time" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|time|units";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|value",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|value";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|precision",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|precision";
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|units"	[mtt_class_string="ord_betterproto.TemperatureTemperatureUnit",
		mtt_node_name="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|units",
		mtt_parent="<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|conditions|temperature|measurements|<ListIndex>|temperature|units";
	"<ROOT>|conditions|pressure|control"	[mtt_class_string="ord_betterproto.PressureConditionsPressureControl",
		mtt_node_name="<ROOT>|conditions|pressure|control",
		mtt_parent="<ROOT>|conditions|pressure",
		mtt_relation_to_parent=control,
		mtt_type_hint_string="<class 'ord_betterproto.PressureConditionsPressureControl'>"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|control";
	"<ROOT>|conditions|pressure|setpoint"	[mtt_class_string="ord_betterproto.Pressure",
		mtt_node_name="<ROOT>|conditions|pressure|setpoint",
		mtt_parent="<ROOT>|conditions|pressure",
		mtt_relation_to_parent=setpoint,
		mtt_type_hint_string="<class 'ord_betterproto.Pressure'>"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|setpoint";
	"<ROOT>|conditions|pressure|atmosphere"	[mtt_class_string="ord_betterproto.PressureConditionsAtmosphere",
		mtt_node_name="<ROOT>|conditions|pressure|atmosphere",
		mtt_parent="<ROOT>|conditions|pressure",
		mtt_relation_to_parent=atmosphere,
		mtt_type_hint_string="<class 'ord_betterproto.PressureConditionsAtmosphere'>"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|atmosphere";
	"<ROOT>|conditions|pressure|measurements"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|conditions|pressure|measurements",
		mtt_parent="<ROOT>|conditions|pressure",
		mtt_relation_to_parent=measurements,
		mtt_type_hint_string="typing.List[ord_betterproto.PressureConditionsPressureMeasurement]"];
	"<ROOT>|conditions|pressure" -> "<ROOT>|conditions|pressure|measurements";
	"<ROOT>|conditions|pressure|control|type"	[mtt_class_string="ord_betterproto.PressureConditionsPressureControlPressureControlType",
		mtt_node_name="<ROOT>|conditions|pressure|control|type",
		mtt_parent="<ROOT>|conditions|pressure|control",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'PressureConditionsPressureControlPressureControlType'>"];
	"<ROOT>|conditions|pressure|control" -> "<ROOT>|conditions|pressure|control|type";
	"<ROOT>|conditions|pressure|control|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|pressure|control|details",
		mtt_parent="<ROOT>|conditions|pressure|control",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|pressure|control" -> "<ROOT>|conditions|pressure|control|details";
	"<ROOT>|conditions|pressure|setpoint|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|pressure|setpoint|value",
		mtt_parent="<ROOT>|conditions|pressure|setpoint",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|setpoint" -> "<ROOT>|conditions|pressure|setpoint|value";
	"<ROOT>|conditions|pressure|setpoint|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|pressure|setpoint|precision",
		mtt_parent="<ROOT>|conditions|pressure|setpoint",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|setpoint" -> "<ROOT>|conditions|pressure|setpoint|precision";
	"<ROOT>|conditions|pressure|setpoint|units"	[mtt_class_string="ord_betterproto.PressurePressureUnit",
		mtt_node_name="<ROOT>|conditions|pressure|setpoint|units",
		mtt_parent="<ROOT>|conditions|pressure|setpoint",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'PressurePressureUnit'>"];
	"<ROOT>|conditions|pressure|setpoint" -> "<ROOT>|conditions|pressure|setpoint|units";
	"<ROOT>|conditions|pressure|atmosphere|type"	[mtt_class_string="ord_betterproto.PressureConditionsAtmosphereAtmosphereType",
		mtt_node_name="<ROOT>|conditions|pressure|atmosphere|type",
		mtt_parent="<ROOT>|conditions|pressure|atmosphere",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'PressureConditionsAtmosphereAtmosphereType'>"];
	"<ROOT>|conditions|pressure|atmosphere" -> "<ROOT>|conditions|pressure|atmosphere|type";
	"<ROOT>|conditions|pressure|atmosphere|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|pressure|atmosphere|details",
		mtt_parent="<ROOT>|conditions|pressure|atmosphere",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|pressure|atmosphere" -> "<ROOT>|conditions|pressure|atmosphere|details";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>"	[mtt_class_string="ord_betterproto.PressureConditionsPressureMeasurement",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>",
		mtt_parent="<ROOT>|conditions|pressure|measurements",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.PressureConditionsPressureMeasurement'>"];
	"<ROOT>|conditions|pressure|measurements" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|type"	[mtt_class_string="ord_betterproto.PressureConditionsPressureMeasurementPressureMeasurementType",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|type",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'PressureConditionsPressureMeasurementPressureMeasurementType'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|type";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|details",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|details";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|time",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure"	[mtt_class_string="ord_betterproto.Pressure",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>",
		mtt_relation_to_parent=pressure,
		mtt_type_hint_string="<class 'ord_betterproto.Pressure'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|time|value",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time|value";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|time|precision",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>|time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time|precision";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|time|units",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>|time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|time" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|time|units";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|value",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|value";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|precision",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|precision";
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|units"	[mtt_class_string="ord_betterproto.PressurePressureUnit",
		mtt_node_name="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|units",
		mtt_parent="<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'PressurePressureUnit'>"];
	"<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure" -> "<ROOT>|conditions|pressure|measurements|<ListIndex>|pressure|units";
	"<ROOT>|conditions|stirring|type"	[mtt_class_string="ord_betterproto.StirringConditionsStirringMethodType",
		mtt_node_name="<ROOT>|conditions|stirring|type",
		mtt_parent="<ROOT>|conditions|stirring",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'StirringConditionsStirringMethodType'>"];
	"<ROOT>|conditions|stirring" -> "<ROOT>|conditions|stirring|type";
	"<ROOT>|conditions|stirring|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|stirring|details",
		mtt_parent="<ROOT>|conditions|stirring",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|stirring" -> "<ROOT>|conditions|stirring|details";
	"<ROOT>|conditions|stirring|rate"	[mtt_class_string="ord_betterproto.StirringConditionsStirringRate",
		mtt_node_name="<ROOT>|conditions|stirring|rate",
		mtt_parent="<ROOT>|conditions|stirring",
		mtt_relation_to_parent=rate,
		mtt_type_hint_string="<class 'ord_betterproto.StirringConditionsStirringRate'>"];
	"<ROOT>|conditions|stirring" -> "<ROOT>|conditions|stirring|rate";
	"<ROOT>|conditions|stirring|rate|type"	[mtt_class_string="ord_betterproto.StirringConditionsStirringRateStirringRateType",
		mtt_node_name="<ROOT>|conditions|stirring|rate|type",
		mtt_parent="<ROOT>|conditions|stirring|rate",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'StirringConditionsStirringRateStirringRateType'>"];
	"<ROOT>|conditions|stirring|rate" -> "<ROOT>|conditions|stirring|rate|type";
	"<ROOT>|conditions|stirring|rate|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|stirring|rate|details",
		mtt_parent="<ROOT>|conditions|stirring|rate",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|stirring|rate" -> "<ROOT>|conditions|stirring|rate|details";
	"<ROOT>|conditions|stirring|rate|rpm"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|conditions|stirring|rate|rpm",
		mtt_parent="<ROOT>|conditions|stirring|rate",
		mtt_relation_to_parent=rpm,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|conditions|stirring|rate" -> "<ROOT>|conditions|stirring|rate|rpm";
	"<ROOT>|conditions|illumination|type"	[mtt_class_string="ord_betterproto.IlluminationConditionsIlluminationType",
		mtt_node_name="<ROOT>|conditions|illumination|type",
		mtt_parent="<ROOT>|conditions|illumination",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'IlluminationConditionsIlluminationType'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|type";
	"<ROOT>|conditions|illumination|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|illumination|details",
		mtt_parent="<ROOT>|conditions|illumination",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|details";
	"<ROOT>|conditions|illumination|peak_wavelength"	[mtt_class_string="ord_betterproto.Wavelength",
		mtt_node_name="<ROOT>|conditions|illumination|peak_wavelength",
		mtt_parent="<ROOT>|conditions|illumination",
		mtt_relation_to_parent=peak_wavelength,
		mtt_type_hint_string="<class 'ord_betterproto.Wavelength'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|peak_wavelength";
	"<ROOT>|conditions|illumination|color"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|illumination|color",
		mtt_parent="<ROOT>|conditions|illumination",
		mtt_relation_to_parent=color,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|color";
	"<ROOT>|conditions|illumination|distance_to_vessel"	[mtt_class_string="ord_betterproto.Length",
		mtt_node_name="<ROOT>|conditions|illumination|distance_to_vessel",
		mtt_parent="<ROOT>|conditions|illumination",
		mtt_relation_to_parent=distance_to_vessel,
		mtt_type_hint_string="<class 'ord_betterproto.Length'>"];
	"<ROOT>|conditions|illumination" -> "<ROOT>|conditions|illumination|distance_to_vessel";
	"<ROOT>|conditions|illumination|peak_wavelength|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|illumination|peak_wavelength|value",
		mtt_parent="<ROOT>|conditions|illumination|peak_wavelength",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|peak_wavelength" -> "<ROOT>|conditions|illumination|peak_wavelength|value";
	"<ROOT>|conditions|illumination|peak_wavelength|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|illumination|peak_wavelength|precision",
		mtt_parent="<ROOT>|conditions|illumination|peak_wavelength",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|peak_wavelength" -> "<ROOT>|conditions|illumination|peak_wavelength|precision";
	"<ROOT>|conditions|illumination|peak_wavelength|units"	[mtt_class_string="ord_betterproto.WavelengthWavelengthUnit",
		mtt_node_name="<ROOT>|conditions|illumination|peak_wavelength|units",
		mtt_parent="<ROOT>|conditions|illumination|peak_wavelength",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'WavelengthWavelengthUnit'>"];
	"<ROOT>|conditions|illumination|peak_wavelength" -> "<ROOT>|conditions|illumination|peak_wavelength|units";
	"<ROOT>|conditions|illumination|distance_to_vessel|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|illumination|distance_to_vessel|value",
		mtt_parent="<ROOT>|conditions|illumination|distance_to_vessel",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|distance_to_vessel" -> "<ROOT>|conditions|illumination|distance_to_vessel|value";
	"<ROOT>|conditions|illumination|distance_to_vessel|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|illumination|distance_to_vessel|precision",
		mtt_parent="<ROOT>|conditions|illumination|distance_to_vessel",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|illumination|distance_to_vessel" -> "<ROOT>|conditions|illumination|distance_to_vessel|precision";
	"<ROOT>|conditions|illumination|distance_to_vessel|units"	[mtt_class_string="ord_betterproto.LengthLengthUnit",
		mtt_node_name="<ROOT>|conditions|illumination|distance_to_vessel|units",
		mtt_parent="<ROOT>|conditions|illumination|distance_to_vessel",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'LengthLengthUnit'>"];
	"<ROOT>|conditions|illumination|distance_to_vessel" -> "<ROOT>|conditions|illumination|distance_to_vessel|units";
	"<ROOT>|conditions|electrochemistry|type"	[mtt_class_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryType",
		mtt_node_name="<ROOT>|conditions|electrochemistry|type",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ElectrochemistryConditionsElectrochemistryType'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|type";
	"<ROOT>|conditions|electrochemistry|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|electrochemistry|details",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|details";
	"<ROOT>|conditions|electrochemistry|current"	[mtt_class_string="ord_betterproto.Current",
		mtt_node_name="<ROOT>|conditions|electrochemistry|current",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=current,
		mtt_type_hint_string="<class 'ord_betterproto.Current'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|current";
	"<ROOT>|conditions|electrochemistry|voltage"	[mtt_class_string="ord_betterproto.Voltage",
		mtt_node_name="<ROOT>|conditions|electrochemistry|voltage",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=voltage,
		mtt_type_hint_string="<class 'ord_betterproto.Voltage'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|voltage";
	"<ROOT>|conditions|electrochemistry|anode_material"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|electrochemistry|anode_material",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=anode_material,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|anode_material";
	"<ROOT>|conditions|electrochemistry|cathode_material"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|electrochemistry|cathode_material",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=cathode_material,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|cathode_material";
	"<ROOT>|conditions|electrochemistry|electrode_separation"	[mtt_class_string="ord_betterproto.Length",
		mtt_node_name="<ROOT>|conditions|electrochemistry|electrode_separation",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=electrode_separation,
		mtt_type_hint_string="<class 'ord_betterproto.Length'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|electrode_separation";
	"<ROOT>|conditions|electrochemistry|measurements"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=measurements,
		mtt_type_hint_string="typing.List[ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement]"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|measurements";
	"<ROOT>|conditions|electrochemistry|cell"	[mtt_class_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryCell",
		mtt_node_name="<ROOT>|conditions|electrochemistry|cell",
		mtt_parent="<ROOT>|conditions|electrochemistry",
		mtt_relation_to_parent=cell,
		mtt_type_hint_string="<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryCell'>"];
	"<ROOT>|conditions|electrochemistry" -> "<ROOT>|conditions|electrochemistry|cell";
	"<ROOT>|conditions|electrochemistry|current|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|current|value",
		mtt_parent="<ROOT>|conditions|electrochemistry|current",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|current" -> "<ROOT>|conditions|electrochemistry|current|value";
	"<ROOT>|conditions|electrochemistry|current|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|current|precision",
		mtt_parent="<ROOT>|conditions|electrochemistry|current",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|current" -> "<ROOT>|conditions|electrochemistry|current|precision";
	"<ROOT>|conditions|electrochemistry|current|units"	[mtt_class_string="ord_betterproto.CurrentCurrentUnit",
		mtt_node_name="<ROOT>|conditions|electrochemistry|current|units",
		mtt_parent="<ROOT>|conditions|electrochemistry|current",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'CurrentCurrentUnit'>"];
	"<ROOT>|conditions|electrochemistry|current" -> "<ROOT>|conditions|electrochemistry|current|units";
	"<ROOT>|conditions|electrochemistry|voltage|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|voltage|value",
		mtt_parent="<ROOT>|conditions|electrochemistry|voltage",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|voltage" -> "<ROOT>|conditions|electrochemistry|voltage|value";
	"<ROOT>|conditions|electrochemistry|voltage|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|voltage|precision",
		mtt_parent="<ROOT>|conditions|electrochemistry|voltage",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|voltage" -> "<ROOT>|conditions|electrochemistry|voltage|precision";
	"<ROOT>|conditions|electrochemistry|voltage|units"	[mtt_class_string="ord_betterproto.VoltageVoltageUnit",
		mtt_node_name="<ROOT>|conditions|electrochemistry|voltage|units",
		mtt_parent="<ROOT>|conditions|electrochemistry|voltage",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VoltageVoltageUnit'>"];
	"<ROOT>|conditions|electrochemistry|voltage" -> "<ROOT>|conditions|electrochemistry|voltage|units";
	"<ROOT>|conditions|electrochemistry|electrode_separation|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|electrode_separation|value",
		mtt_parent="<ROOT>|conditions|electrochemistry|electrode_separation",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|electrode_separation" -> "<ROOT>|conditions|electrochemistry|electrode_separation|value";
	"<ROOT>|conditions|electrochemistry|electrode_separation|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|electrode_separation|precision",
		mtt_parent="<ROOT>|conditions|electrochemistry|electrode_separation",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|electrode_separation" -> "<ROOT>|conditions|electrochemistry|electrode_separation|precision";
	"<ROOT>|conditions|electrochemistry|electrode_separation|units"	[mtt_class_string="ord_betterproto.LengthLengthUnit",
		mtt_node_name="<ROOT>|conditions|electrochemistry|electrode_separation|units",
		mtt_parent="<ROOT>|conditions|electrochemistry|electrode_separation",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'LengthLengthUnit'>"];
	"<ROOT>|conditions|electrochemistry|electrode_separation" -> "<ROOT>|conditions|electrochemistry|electrode_separation|units";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>"	[mtt_class_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ElectrochemistryConditionsElectrochemistryMeasurement'>"];
	"<ROOT>|conditions|electrochemistry|measurements" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current"	[mtt_class_string="ord_betterproto.Current",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>",
		mtt_relation_to_parent=current,
		mtt_type_hint_string="<class 'ord_betterproto.Current'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage"	[mtt_class_string="ord_betterproto.Voltage",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>",
		mtt_relation_to_parent=voltage,
		mtt_type_hint_string="<class 'ord_betterproto.Voltage'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|value",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|value";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|precision",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|precision";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|units",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|time|units";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|value",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|value";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|precision",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|precision";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|units"	[mtt_class_string="ord_betterproto.CurrentCurrentUnit",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|units",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'CurrentCurrentUnit'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|current|units";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|value",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|value";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|precision",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|precision";
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|units"	[mtt_class_string="ord_betterproto.VoltageVoltageUnit",
		mtt_node_name="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|units",
		mtt_parent="<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VoltageVoltageUnit'>"];
	"<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage" -> "<ROOT>|conditions|electrochemistry|measurements|<ListIndex>|voltage|units";
	"<ROOT>|conditions|electrochemistry|cell|type"	[mtt_class_string="ord_betterproto.ElectrochemistryConditionsElectrochemistryCellElectrochemistryCellType",
		mtt_node_name="<ROOT>|conditions|electrochemistry|cell|type",
		mtt_parent="<ROOT>|conditions|electrochemistry|cell",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ElectrochemistryConditionsElectrochemistryCellElectrochemistryCellType'>"];
	"<ROOT>|conditions|electrochemistry|cell" -> "<ROOT>|conditions|electrochemistry|cell|type";
	"<ROOT>|conditions|electrochemistry|cell|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|electrochemistry|cell|details",
		mtt_parent="<ROOT>|conditions|electrochemistry|cell",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|electrochemistry|cell" -> "<ROOT>|conditions|electrochemistry|cell|details";
	"<ROOT>|conditions|flow|type"	[mtt_class_string="ord_betterproto.FlowConditionsFlowType",
		mtt_node_name="<ROOT>|conditions|flow|type",
		mtt_parent="<ROOT>|conditions|flow",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'FlowConditionsFlowType'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|type";
	"<ROOT>|conditions|flow|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|flow|details",
		mtt_parent="<ROOT>|conditions|flow",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|details";
	"<ROOT>|conditions|flow|pump_type"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|flow|pump_type",
		mtt_parent="<ROOT>|conditions|flow",
		mtt_relation_to_parent=pump_type,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|pump_type";
	"<ROOT>|conditions|flow|tubing"	[mtt_class_string="ord_betterproto.FlowConditionsTubing",
		mtt_node_name="<ROOT>|conditions|flow|tubing",
		mtt_parent="<ROOT>|conditions|flow",
		mtt_relation_to_parent=tubing,
		mtt_type_hint_string="<class 'ord_betterproto.FlowConditionsTubing'>"];
	"<ROOT>|conditions|flow" -> "<ROOT>|conditions|flow|tubing";
	"<ROOT>|conditions|flow|tubing|type"	[mtt_class_string="ord_betterproto.FlowConditionsTubingTubingType",
		mtt_node_name="<ROOT>|conditions|flow|tubing|type",
		mtt_parent="<ROOT>|conditions|flow|tubing",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'FlowConditionsTubingTubingType'>"];
	"<ROOT>|conditions|flow|tubing" -> "<ROOT>|conditions|flow|tubing|type";
	"<ROOT>|conditions|flow|tubing|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|conditions|flow|tubing|details",
		mtt_parent="<ROOT>|conditions|flow|tubing",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|conditions|flow|tubing" -> "<ROOT>|conditions|flow|tubing|details";
	"<ROOT>|conditions|flow|tubing|diameter"	[mtt_class_string="ord_betterproto.Length",
		mtt_node_name="<ROOT>|conditions|flow|tubing|diameter",
		mtt_parent="<ROOT>|conditions|flow|tubing",
		mtt_relation_to_parent=diameter,
		mtt_type_hint_string="<class 'ord_betterproto.Length'>"];
	"<ROOT>|conditions|flow|tubing" -> "<ROOT>|conditions|flow|tubing|diameter";
	"<ROOT>|conditions|flow|tubing|diameter|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|flow|tubing|diameter|value",
		mtt_parent="<ROOT>|conditions|flow|tubing|diameter",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|flow|tubing|diameter" -> "<ROOT>|conditions|flow|tubing|diameter|value";
	"<ROOT>|conditions|flow|tubing|diameter|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|conditions|flow|tubing|diameter|precision",
		mtt_parent="<ROOT>|conditions|flow|tubing|diameter",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|conditions|flow|tubing|diameter" -> "<ROOT>|conditions|flow|tubing|diameter|precision";
	"<ROOT>|conditions|flow|tubing|diameter|units"	[mtt_class_string="ord_betterproto.LengthLengthUnit",
		mtt_node_name="<ROOT>|conditions|flow|tubing|diameter|units",
		mtt_parent="<ROOT>|conditions|flow|tubing|diameter",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'LengthLengthUnit'>"];
	"<ROOT>|conditions|flow|tubing|diameter" -> "<ROOT>|conditions|flow|tubing|diameter|units";
	"<ROOT>|notes|is_heterogeneous"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|is_heterogeneous",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=is_heterogeneous,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_heterogeneous";
	"<ROOT>|notes|forms_precipitate"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|forms_precipitate",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=forms_precipitate,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|forms_precipitate";
	"<ROOT>|notes|is_exothermic"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|is_exothermic",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=is_exothermic,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_exothermic";
	"<ROOT>|notes|offgasses"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|offgasses",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=offgasses,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|offgasses";
	"<ROOT>|notes|is_sensitive_to_moisture"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|is_sensitive_to_moisture",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=is_sensitive_to_moisture,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_sensitive_to_moisture";
	"<ROOT>|notes|is_sensitive_to_oxygen"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|is_sensitive_to_oxygen",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=is_sensitive_to_oxygen,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_sensitive_to_oxygen";
	"<ROOT>|notes|is_sensitive_to_light"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|notes|is_sensitive_to_light",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=is_sensitive_to_light,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|notes" -> "<ROOT>|notes|is_sensitive_to_light";
	"<ROOT>|notes|safety_notes"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|notes|safety_notes",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=safety_notes,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|notes" -> "<ROOT>|notes|safety_notes";
	"<ROOT>|notes|procedure_details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|notes|procedure_details",
		mtt_parent="<ROOT>|notes",
		mtt_relation_to_parent=procedure_details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|notes" -> "<ROOT>|notes|procedure_details";
	"<ROOT>|observations|<ListIndex>"	[mtt_class_string="ord_betterproto.ReactionObservation",
		mtt_node_name="<ROOT>|observations|<ListIndex>",
		mtt_parent="<ROOT>|observations",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ReactionObservation'>"];
	"<ROOT>|observations" -> "<ROOT>|observations|<ListIndex>";
	"<ROOT>|observations|<ListIndex>|time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|observations|<ListIndex>|time",
		mtt_parent="<ROOT>|observations|<ListIndex>",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|observations|<ListIndex>" -> "<ROOT>|observations|<ListIndex>|time";
	"<ROOT>|observations|<ListIndex>|comment"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|observations|<ListIndex>|comment",
		mtt_parent="<ROOT>|observations|<ListIndex>",
		mtt_relation_to_parent=comment,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>" -> "<ROOT>|observations|<ListIndex>|comment";
	"<ROOT>|observations|<ListIndex>|image"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image",
		mtt_parent="<ROOT>|observations|<ListIndex>",
		mtt_relation_to_parent=image,
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|observations|<ListIndex>" -> "<ROOT>|observations|<ListIndex>|image";
	"<ROOT>|observations|<ListIndex>|time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|observations|<ListIndex>|time|value",
		mtt_parent="<ROOT>|observations|<ListIndex>|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|observations|<ListIndex>|time" -> "<ROOT>|observations|<ListIndex>|time|value";
	"<ROOT>|observations|<ListIndex>|time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|observations|<ListIndex>|time|precision",
		mtt_parent="<ROOT>|observations|<ListIndex>|time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|observations|<ListIndex>|time" -> "<ROOT>|observations|<ListIndex>|time|precision";
	"<ROOT>|observations|<ListIndex>|time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|observations|<ListIndex>|time|units",
		mtt_parent="<ROOT>|observations|<ListIndex>|time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|observations|<ListIndex>|time" -> "<ROOT>|observations|<ListIndex>|time|units";
	"<ROOT>|observations|<ListIndex>|image|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|float_value",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|float_value";
	"<ROOT>|observations|<ListIndex>|image|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|integer_value",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|integer_value";
	"<ROOT>|observations|<ListIndex>|image|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|bytes_value",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|bytes_value";
	"<ROOT>|observations|<ListIndex>|image|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|string_value",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|string_value";
	"<ROOT>|observations|<ListIndex>|image|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|url",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|url";
	"<ROOT>|observations|<ListIndex>|image|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|description",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|description";
	"<ROOT>|observations|<ListIndex>|image|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|observations|<ListIndex>|image|format",
		mtt_parent="<ROOT>|observations|<ListIndex>|image",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|observations|<ListIndex>|image" -> "<ROOT>|observations|<ListIndex>|image|format";
	"<ROOT>|workups|<ListIndex>"	[mtt_class_string="ord_betterproto.ReactionWorkup",
		mtt_node_name="<ROOT>|workups|<ListIndex>",
		mtt_parent="<ROOT>|workups",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ReactionWorkup'>"];
	"<ROOT>|workups" -> "<ROOT>|workups|<ListIndex>";
	"<ROOT>|workups|<ListIndex>|type"	[mtt_class_string="ord_betterproto.ReactionWorkupReactionWorkupType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|type",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionWorkupReactionWorkupType'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|type";
	"<ROOT>|workups|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|details",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|details";
	"<ROOT>|workups|<ListIndex>|duration"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|workups|<ListIndex>|duration",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=duration,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|duration";
	"<ROOT>|workups|<ListIndex>|input"	[mtt_class_string="ord_betterproto.ReactionInput",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=input,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionInput'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input";
	"<ROOT>|workups|<ListIndex>|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|amount";
	"<ROOT>|workups|<ListIndex>|temperature"	[mtt_class_string="ord_betterproto.TemperatureConditions",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=temperature,
		mtt_type_hint_string="<class 'ord_betterproto.TemperatureConditions'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature";
	"<ROOT>|workups|<ListIndex>|keep_phase"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|keep_phase",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=keep_phase,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|keep_phase";
	"<ROOT>|workups|<ListIndex>|stirring"	[mtt_class_string="ord_betterproto.StirringConditions",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=stirring,
		mtt_type_hint_string="<class 'ord_betterproto.StirringConditions'>"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|stirring";
	"<ROOT>|workups|<ListIndex>|target_ph"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|target_ph",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=target_ph,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|target_ph";
	"<ROOT>|workups|<ListIndex>|is_automated"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|is_automated",
		mtt_parent="<ROOT>|workups|<ListIndex>",
		mtt_relation_to_parent=is_automated,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|is_automated";
	"<ROOT>|workups|<ListIndex>|duration|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|duration|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|duration",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|duration" -> "<ROOT>|workups|<ListIndex>|duration|value";
	"<ROOT>|workups|<ListIndex>|duration|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|duration|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|duration",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|duration" -> "<ROOT>|workups|<ListIndex>|duration|precision";
	"<ROOT>|workups|<ListIndex>|duration|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|duration|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|duration",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|duration" -> "<ROOT>|workups|<ListIndex>|duration|units";
	"<ROOT>|workups|<ListIndex>|input|components"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=components,
		mtt_type_hint_string="typing.List[ord_betterproto.Compound]"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|components";
	"<ROOT>|workups|<ListIndex>|input|crude_components"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=crude_components,
		mtt_type_hint_string="typing.List[ord_betterproto.CrudeComponent]"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|crude_components";
	"<ROOT>|workups|<ListIndex>|input|addition_order"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_order",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=addition_order,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_order";
	"<ROOT>|workups|<ListIndex>|input|addition_time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_time",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=addition_time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_time";
	"<ROOT>|workups|<ListIndex>|input|addition_speed"	[mtt_class_string="ord_betterproto.ReactionInputAdditionSpeed",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_speed",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=addition_speed,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionInputAdditionSpeed'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_speed";
	"<ROOT>|workups|<ListIndex>|input|addition_duration"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_duration",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=addition_duration,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_duration";
	"<ROOT>|workups|<ListIndex>|input|flow_rate"	[mtt_class_string="ord_betterproto.FlowRate",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|flow_rate",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=flow_rate,
		mtt_type_hint_string="<class 'ord_betterproto.FlowRate'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|flow_rate";
	"<ROOT>|workups|<ListIndex>|input|addition_device"	[mtt_class_string="ord_betterproto.ReactionInputAdditionDevice",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_device",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=addition_device,
		mtt_type_hint_string="<class 'ord_betterproto.ReactionInputAdditionDevice'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_device";
	"<ROOT>|workups|<ListIndex>|input|addition_temperature"	[mtt_class_string="ord_betterproto.Temperature",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_temperature",
		mtt_parent="<ROOT>|workups|<ListIndex>|input",
		mtt_relation_to_parent=addition_temperature,
		mtt_type_hint_string="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|workups|<ListIndex>|input" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>"	[mtt_class_string="ord_betterproto.Compound",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|workups|<ListIndex>|input|components" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=identifiers,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|reaction_role"	[mtt_class_string="ord_betterproto.ReactionRoleReactionRoleType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|reaction_role",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=reaction_role,
		mtt_type_hint_string="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|reaction_role";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|is_limiting"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|is_limiting",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=is_limiting,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|is_limiting";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=preparations,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source"	[mtt_class_string="ord_betterproto.CompoundSource",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=source,
		mtt_type_hint_string="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=features,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>",
		mtt_relation_to_parent=analyses,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundIdentifier",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|type";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|details";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|identifiers|<ListIndex>|value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume_includes_solutes";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|precision";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|mass|units";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|precision";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|moles|units";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|precision";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|volume|units";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|type";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|amount|unmeasured|details";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundPreparation",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|type";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|details";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|reaction_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|reaction_id",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>",
		mtt_relation_to_parent=reaction_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|preparations|<ListIndex>|reaction_id";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|vendor"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|vendor",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source",
		mtt_relation_to_parent=vendor,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|vendor";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|catalog_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|catalog_id",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source",
		mtt_relation_to_parent=catalog_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|catalog_id";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|lot"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|lot",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source",
		mtt_relation_to_parent=lot,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|source|lot";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|float_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|float_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|integer_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|integer_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|bytes_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|string_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|string_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|url",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|url";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|description",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|description";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|format",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|features|<DictKey>|format";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>"	[mtt_class_string="ord_betterproto.Analysis",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|type"	[mtt_class_string="ord_betterproto.AnalysisAnalysisType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|type";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|details";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|chmo_id"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|chmo_id",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=chmo_id,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|chmo_id";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=is_of_isolated_species,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|is_of_isolated_species";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=data,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_manufacturer,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_manufacturer";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_last_calibrated,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format";
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|workups|<ListIndex>|input|components|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>"	[mtt_class_string="ord_betterproto.CrudeComponent",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CrudeComponent'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|reaction_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|reaction_id",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>",
		mtt_relation_to_parent=reaction_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|reaction_id";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|includes_workup"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|includes_workup",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>",
		mtt_relation_to_parent=includes_workup,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|includes_workup";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|has_derived_amount"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|has_derived_amount",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>",
		mtt_relation_to_parent=has_derived_amount,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|has_derived_amount";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume_includes_solutes";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|value";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|precision";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|mass|units";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|value";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|precision";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|moles|units";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|value";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|precision";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|volume|units";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|type";
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|input|crude_components|<ListIndex>|amount|unmeasured|details";
	"<ROOT>|workups|<ListIndex>|input|addition_time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_time|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_time" -> "<ROOT>|workups|<ListIndex>|input|addition_time|value";
	"<ROOT>|workups|<ListIndex>|input|addition_time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_time|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_time" -> "<ROOT>|workups|<ListIndex>|input|addition_time|precision";
	"<ROOT>|workups|<ListIndex>|input|addition_time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_time|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_time" -> "<ROOT>|workups|<ListIndex>|input|addition_time|units";
	"<ROOT>|workups|<ListIndex>|input|addition_speed|type"	[mtt_class_string="ord_betterproto.ReactionInputAdditionSpeedAdditionSpeedType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_speed|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_speed",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionInputAdditionSpeedAdditionSpeedType'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_speed" -> "<ROOT>|workups|<ListIndex>|input|addition_speed|type";
	"<ROOT>|workups|<ListIndex>|input|addition_speed|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_speed|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_speed",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_speed" -> "<ROOT>|workups|<ListIndex>|input|addition_speed|details";
	"<ROOT>|workups|<ListIndex>|input|addition_duration|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_duration|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_duration",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_duration" -> "<ROOT>|workups|<ListIndex>|input|addition_duration|value";
	"<ROOT>|workups|<ListIndex>|input|addition_duration|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_duration|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_duration",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_duration" -> "<ROOT>|workups|<ListIndex>|input|addition_duration|precision";
	"<ROOT>|workups|<ListIndex>|input|addition_duration|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_duration|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_duration",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_duration" -> "<ROOT>|workups|<ListIndex>|input|addition_duration|units";
	"<ROOT>|workups|<ListIndex>|input|flow_rate|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|flow_rate|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|flow_rate",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|flow_rate" -> "<ROOT>|workups|<ListIndex>|input|flow_rate|value";
	"<ROOT>|workups|<ListIndex>|input|flow_rate|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|flow_rate|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|flow_rate",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|flow_rate" -> "<ROOT>|workups|<ListIndex>|input|flow_rate|precision";
	"<ROOT>|workups|<ListIndex>|input|flow_rate|units"	[mtt_class_string="ord_betterproto.FlowRateFlowRateUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|flow_rate|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|flow_rate",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'FlowRateFlowRateUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|flow_rate" -> "<ROOT>|workups|<ListIndex>|input|flow_rate|units";
	"<ROOT>|workups|<ListIndex>|input|addition_device|type"	[mtt_class_string="ord_betterproto.ReactionInputAdditionDeviceAdditionDeviceType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_device|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_device",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ReactionInputAdditionDeviceAdditionDeviceType'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_device" -> "<ROOT>|workups|<ListIndex>|input|addition_device|type";
	"<ROOT>|workups|<ListIndex>|input|addition_device|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_device|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_device",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_device" -> "<ROOT>|workups|<ListIndex>|input|addition_device|details";
	"<ROOT>|workups|<ListIndex>|input|addition_temperature|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_temperature|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_temperature",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature|value";
	"<ROOT>|workups|<ListIndex>|input|addition_temperature|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_temperature|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_temperature",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature|precision";
	"<ROOT>|workups|<ListIndex>|input|addition_temperature|units"	[mtt_class_string="ord_betterproto.TemperatureTemperatureUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|input|addition_temperature|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|input|addition_temperature",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|workups|<ListIndex>|input|addition_temperature" -> "<ROOT>|workups|<ListIndex>|input|addition_temperature|units";
	"<ROOT>|workups|<ListIndex>|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|mass",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|mass";
	"<ROOT>|workups|<ListIndex>|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|moles",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|moles";
	"<ROOT>|workups|<ListIndex>|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|volume",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|volume";
	"<ROOT>|workups|<ListIndex>|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|unmeasured",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|unmeasured";
	"<ROOT>|workups|<ListIndex>|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|workups|<ListIndex>|amount" -> "<ROOT>|workups|<ListIndex>|amount|volume_includes_solutes";
	"<ROOT>|workups|<ListIndex>|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|mass|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|amount|mass|value";
	"<ROOT>|workups|<ListIndex>|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|mass|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|amount|mass|precision";
	"<ROOT>|workups|<ListIndex>|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|mass|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|workups|<ListIndex>|amount|mass" -> "<ROOT>|workups|<ListIndex>|amount|mass|units";
	"<ROOT>|workups|<ListIndex>|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|moles|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|amount|moles|value";
	"<ROOT>|workups|<ListIndex>|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|moles|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|amount|moles|precision";
	"<ROOT>|workups|<ListIndex>|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|moles|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|workups|<ListIndex>|amount|moles" -> "<ROOT>|workups|<ListIndex>|amount|moles|units";
	"<ROOT>|workups|<ListIndex>|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|volume|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|amount|volume|value";
	"<ROOT>|workups|<ListIndex>|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|volume|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|amount|volume|precision";
	"<ROOT>|workups|<ListIndex>|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|volume|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|workups|<ListIndex>|amount|volume" -> "<ROOT>|workups|<ListIndex>|amount|volume|units";
	"<ROOT>|workups|<ListIndex>|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|unmeasured|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|amount|unmeasured|type";
	"<ROOT>|workups|<ListIndex>|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|amount|unmeasured|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|amount|unmeasured" -> "<ROOT>|workups|<ListIndex>|amount|unmeasured|details";
	"<ROOT>|workups|<ListIndex>|temperature|control"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureControl",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|control",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature",
		mtt_relation_to_parent=control,
		mtt_type_hint_string="<class 'ord_betterproto.TemperatureConditionsTemperatureControl'>"];
	"<ROOT>|workups|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|control";
	"<ROOT>|workups|<ListIndex>|temperature|setpoint"	[mtt_class_string="ord_betterproto.Temperature",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|setpoint",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature",
		mtt_relation_to_parent=setpoint,
		mtt_type_hint_string="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|workups|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint";
	"<ROOT>|workups|<ListIndex>|temperature|measurements"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature",
		mtt_relation_to_parent=measurements,
		mtt_type_hint_string="typing.List[ord_betterproto.TemperatureConditionsTemperatureMeasurement]"];
	"<ROOT>|workups|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements";
	"<ROOT>|workups|<ListIndex>|temperature|control|type"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureControlTemperatureControlType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|control|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|control",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'TemperatureConditionsTemperatureControlTemperatureControlType'>"];
	"<ROOT>|workups|<ListIndex>|temperature|control" -> "<ROOT>|workups|<ListIndex>|temperature|control|type";
	"<ROOT>|workups|<ListIndex>|temperature|control|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|control|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|control",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|temperature|control" -> "<ROOT>|workups|<ListIndex>|temperature|control|details";
	"<ROOT>|workups|<ListIndex>|temperature|setpoint|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|setpoint|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|setpoint",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint|value";
	"<ROOT>|workups|<ListIndex>|temperature|setpoint|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|setpoint|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|setpoint",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint|precision";
	"<ROOT>|workups|<ListIndex>|temperature|setpoint|units"	[mtt_class_string="ord_betterproto.TemperatureTemperatureUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|setpoint|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|setpoint",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|workups|<ListIndex>|temperature|setpoint" -> "<ROOT>|workups|<ListIndex>|temperature|setpoint|units";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureMeasurement",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.TemperatureConditionsTemperatureMeasurement'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|type"	[mtt_class_string="ord_betterproto.TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'TemperatureConditionsTemperatureMeasurementTemperatureMeasurementType'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|type";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|details";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature"	[mtt_class_string="ord_betterproto.Temperature",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>",
		mtt_relation_to_parent=temperature,
		mtt_type_hint_string="<class 'ord_betterproto.Temperature'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|value";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|precision";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|time|units";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|value",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|value";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|precision",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|precision";
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|units"	[mtt_class_string="ord_betterproto.TemperatureTemperatureUnit",
		mtt_node_name="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|units",
		mtt_parent="<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TemperatureTemperatureUnit'>"];
	"<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature" -> "<ROOT>|workups|<ListIndex>|temperature|measurements|<ListIndex>|temperature|units";
	"<ROOT>|workups|<ListIndex>|stirring|type"	[mtt_class_string="ord_betterproto.StirringConditionsStirringMethodType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|stirring",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'StirringConditionsStirringMethodType'>"];
	"<ROOT>|workups|<ListIndex>|stirring" -> "<ROOT>|workups|<ListIndex>|stirring|type";
	"<ROOT>|workups|<ListIndex>|stirring|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|stirring",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|stirring" -> "<ROOT>|workups|<ListIndex>|stirring|details";
	"<ROOT>|workups|<ListIndex>|stirring|rate"	[mtt_class_string="ord_betterproto.StirringConditionsStirringRate",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring|rate",
		mtt_parent="<ROOT>|workups|<ListIndex>|stirring",
		mtt_relation_to_parent=rate,
		mtt_type_hint_string="<class 'ord_betterproto.StirringConditionsStirringRate'>"];
	"<ROOT>|workups|<ListIndex>|stirring" -> "<ROOT>|workups|<ListIndex>|stirring|rate";
	"<ROOT>|workups|<ListIndex>|stirring|rate|type"	[mtt_class_string="ord_betterproto.StirringConditionsStirringRateStirringRateType",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring|rate|type",
		mtt_parent="<ROOT>|workups|<ListIndex>|stirring|rate",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'StirringConditionsStirringRateStirringRateType'>"];
	"<ROOT>|workups|<ListIndex>|stirring|rate" -> "<ROOT>|workups|<ListIndex>|stirring|rate|type";
	"<ROOT>|workups|<ListIndex>|stirring|rate|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring|rate|details",
		mtt_parent="<ROOT>|workups|<ListIndex>|stirring|rate",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|workups|<ListIndex>|stirring|rate" -> "<ROOT>|workups|<ListIndex>|stirring|rate|details";
	"<ROOT>|workups|<ListIndex>|stirring|rate|rpm"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|workups|<ListIndex>|stirring|rate|rpm",
		mtt_parent="<ROOT>|workups|<ListIndex>|stirring|rate",
		mtt_relation_to_parent=rpm,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|workups|<ListIndex>|stirring|rate" -> "<ROOT>|workups|<ListIndex>|stirring|rate|rpm";
	"<ROOT>|outcomes|<ListIndex>"	[mtt_class_string="ord_betterproto.ReactionOutcome",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>",
		mtt_parent="<ROOT>|outcomes",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ReactionOutcome'>"];
	"<ROOT>|outcomes" -> "<ROOT>|outcomes|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|reaction_time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|reaction_time",
		mtt_parent="<ROOT>|outcomes|<ListIndex>",
		mtt_relation_to_parent=reaction_time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|reaction_time";
	"<ROOT>|outcomes|<ListIndex>|conversion"	[mtt_class_string="ord_betterproto.Percentage",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|conversion",
		mtt_parent="<ROOT>|outcomes|<ListIndex>",
		mtt_relation_to_parent=conversion,
		mtt_type_hint_string="<class 'ord_betterproto.Percentage'>"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|conversion";
	"<ROOT>|outcomes|<ListIndex>|products"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products",
		mtt_parent="<ROOT>|outcomes|<ListIndex>",
		mtt_relation_to_parent=products,
		mtt_type_hint_string="typing.List[ord_betterproto.ProductCompound]"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products";
	"<ROOT>|outcomes|<ListIndex>|analyses"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses",
		mtt_parent="<ROOT>|outcomes|<ListIndex>",
		mtt_relation_to_parent=analyses,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|outcomes|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|analyses";
	"<ROOT>|outcomes|<ListIndex>|reaction_time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|reaction_time|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|reaction_time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|reaction_time" -> "<ROOT>|outcomes|<ListIndex>|reaction_time|value";
	"<ROOT>|outcomes|<ListIndex>|reaction_time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|reaction_time|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|reaction_time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|reaction_time" -> "<ROOT>|outcomes|<ListIndex>|reaction_time|precision";
	"<ROOT>|outcomes|<ListIndex>|reaction_time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|reaction_time|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|reaction_time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|reaction_time" -> "<ROOT>|outcomes|<ListIndex>|reaction_time|units";
	"<ROOT>|outcomes|<ListIndex>|conversion|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|conversion|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|conversion",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|conversion" -> "<ROOT>|outcomes|<ListIndex>|conversion|value";
	"<ROOT>|outcomes|<ListIndex>|conversion|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|conversion|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|conversion",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|conversion" -> "<ROOT>|outcomes|<ListIndex>|conversion|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>"	[mtt_class_string="ord_betterproto.ProductCompound",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ProductCompound'>"];
	"<ROOT>|outcomes|<ListIndex>|products" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=identifiers,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|is_desired_product"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|is_desired_product",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=is_desired_product,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|is_desired_product";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=measurements,
		mtt_type_hint_string="typing.List[ord_betterproto.ProductMeasurement]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|isolated_color"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|isolated_color",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=isolated_color,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|isolated_color";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture"	[mtt_class_string="ord_betterproto.ProductCompoundTexture",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=texture,
		mtt_type_hint_string="<class 'ord_betterproto.ProductCompoundTexture'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=features,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|reaction_role"	[mtt_class_string="ord_betterproto.ReactionRoleReactionRoleType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|reaction_role",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>",
		mtt_relation_to_parent=reaction_role,
		mtt_type_hint_string="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|reaction_role";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundIdentifier",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|identifiers|<ListIndex>|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>"	[mtt_class_string="ord_betterproto.ProductMeasurement",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.ProductMeasurement'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|analysis_key"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|analysis_key",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=analysis_key,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|analysis_key";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|type"	[mtt_class_string="ord_betterproto.ProductMeasurementProductMeasurementType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ProductMeasurementProductMeasurementType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_internal_standard"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_internal_standard",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=uses_internal_standard,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_internal_standard";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|is_normalized"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|is_normalized",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=is_normalized,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|is_normalized";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_authentic_standard"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_authentic_standard",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=uses_authentic_standard,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|uses_authentic_standard";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard"	[mtt_class_string="ord_betterproto.Compound",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=authentic_standard,
		mtt_type_hint_string="<class 'ord_betterproto.Compound'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage"	[mtt_class_string="ord_betterproto.Percentage",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=percentage,
		mtt_type_hint_string="<class 'ord_betterproto.Percentage'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value"	[mtt_class_string="ord_betterproto.FloatValue",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'ord_betterproto.FloatValue'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|string_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|string_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time"	[mtt_class_string="ord_betterproto.Time",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=retention_time,
		mtt_type_hint_string="<class 'ord_betterproto.Time'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details"	[mtt_class_string="ord_betterproto.ProductMeasurementMassSpecMeasurementDetails",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=mass_spec_details,
		mtt_type_hint_string="<class 'ord_betterproto.ProductMeasurementMassSpecMeasurementDetails'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity"	[mtt_class_string="ord_betterproto.ProductMeasurementSelectivity",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=selectivity,
		mtt_type_hint_string="<class 'ord_betterproto.ProductMeasurementSelectivity'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength"	[mtt_class_string="ord_betterproto.Wavelength",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>",
		mtt_relation_to_parent=wavelength,
		mtt_type_hint_string="<class 'ord_betterproto.Wavelength'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=identifiers,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundIdentifier]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount"	[mtt_class_string="ord_betterproto.Amount",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=amount,
		mtt_type_hint_string="<class 'ord_betterproto.Amount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|reaction_role"	[mtt_class_string="ord_betterproto.ReactionRoleReactionRoleType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|reaction_role",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=reaction_role,
		mtt_type_hint_string="<enum 'ReactionRoleReactionRoleType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|reaction_role";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|is_limiting"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|is_limiting",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=is_limiting,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|is_limiting";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=preparations,
		mtt_type_hint_string="typing.List[ord_betterproto.CompoundPreparation]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source"	[mtt_class_string="ord_betterproto.CompoundSource",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=source,
		mtt_type_hint_string="<class 'ord_betterproto.CompoundSource'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=features,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard",
		mtt_relation_to_parent=analyses,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Analysis]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundIdentifier",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundIdentifier'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundIdentifierCompoundIdentifierType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundIdentifierCompoundIdentifierType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|identifiers|<ListIndex>|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume_includes_solutes";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|mass|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|moles|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|volume|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|amount|unmeasured|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>"	[mtt_class_string="ord_betterproto.CompoundPreparation",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.CompoundPreparation'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|type"	[mtt_class_string="ord_betterproto.CompoundPreparationCompoundPreparationType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'CompoundPreparationCompoundPreparationType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|reaction_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|reaction_id",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>",
		mtt_relation_to_parent=reaction_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|preparations|<ListIndex>|reaction_id";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|vendor"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|vendor",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source",
		mtt_relation_to_parent=vendor,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|vendor";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|catalog_id"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|catalog_id",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source",
		mtt_relation_to_parent=catalog_id,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|catalog_id";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|lot"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|lot",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source",
		mtt_relation_to_parent=lot,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|source|lot";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|float_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|float_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|integer_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|integer_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|bytes_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|string_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|string_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|url",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|url";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|description",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|description";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|format",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|features|<DictKey>|format";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>"	[mtt_class_string="ord_betterproto.Analysis",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|type"	[mtt_class_string="ord_betterproto.AnalysisAnalysisType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|chmo_id"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|chmo_id",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=chmo_id,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|chmo_id";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|is_of_isolated_species"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|is_of_isolated_species",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=is_of_isolated_species,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|is_of_isolated_species";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=data,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_manufacturer"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_manufacturer",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_manufacturer,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_manufacturer";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_last_calibrated,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|float_\
value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|float_\
value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|float_\
value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|integer_\
value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|integer_\
value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|integer_\
value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|bytes_\
value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|bytes_\
value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|bytes_\
value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|string_\
value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|string_\
value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|string_\
value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|url",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|url";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|description",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|description";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|format",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|data|<DictKey>|format";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|authentic_standard|analyses|<DictKey>|instrument_last_\
calibrated|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|percentage|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|float_value|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass"	[mtt_class_string="ord_betterproto.Mass",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount",
		mtt_relation_to_parent=mass,
		mtt_type_hint_string="<class 'ord_betterproto.Mass'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles"	[mtt_class_string="ord_betterproto.Moles",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount",
		mtt_relation_to_parent=moles,
		mtt_type_hint_string="<class 'ord_betterproto.Moles'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume"	[mtt_class_string="ord_betterproto.Volume",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount",
		mtt_relation_to_parent=volume,
		mtt_type_hint_string="<class 'ord_betterproto.Volume'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured"	[mtt_class_string="ord_betterproto.UnmeasuredAmount",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount",
		mtt_relation_to_parent=unmeasured,
		mtt_type_hint_string="<class 'ord_betterproto.UnmeasuredAmount'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume_includes_solutes"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume_includes_solutes",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount",
		mtt_relation_to_parent=volume_includes_solutes,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume_includes_solutes";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|units"	[mtt_class_string="ord_betterproto.MassMassUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MassMassUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|mass|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|units"	[mtt_class_string="ord_betterproto.MolesMolesUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'MolesMolesUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|moles|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|units"	[mtt_class_string="ord_betterproto.VolumeVolumeUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'VolumeVolumeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|volume|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|type"	[mtt_class_string="ord_betterproto.UnmeasuredAmountUnmeasuredAmountType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'UnmeasuredAmountUnmeasuredAmountType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|amount|unmeasured|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|units"	[mtt_class_string="ord_betterproto.TimeTimeUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'TimeTimeUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|retention_time|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|type"	[mtt_class_string="ord_betterproto.ProductMeasurementMassSpecMeasurementDetailsMassSpecMeasurementType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ProductMeasurementMassSpecMeasurementDetailsMassSpecMeasurementType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_minimum_mz"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_minimum_mz",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details",
		mtt_relation_to_parent=tic_minimum_mz,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_minimum_mz";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_maximum_mz"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_maximum_mz",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details",
		mtt_relation_to_parent=tic_maximum_mz,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|tic_maximum_mz";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details",
		mtt_relation_to_parent=eic_masses,
		mtt_type_hint_string="typing.List[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses|<ListIndex>"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses|<ListIndex>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|mass_spec_details|eic_masses|<ListIndex>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|type"	[mtt_class_string="ord_betterproto.ProductMeasurementSelectivitySelectivityType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ProductMeasurementSelectivitySelectivityType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|selectivity|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|precision"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|precision",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength",
		mtt_relation_to_parent=precision,
		mtt_type_hint_string="typing.Optional[float]"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|precision";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|units"	[mtt_class_string="ord_betterproto.WavelengthWavelengthUnit",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|units",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength",
		mtt_relation_to_parent=units,
		mtt_type_hint_string="<enum 'WavelengthWavelengthUnit'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|measurements|<ListIndex>|wavelength|units";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|type"	[mtt_class_string="ord_betterproto.ProductCompoundTextureTextureType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'ProductCompoundTextureTextureType'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|type";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|texture|details";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|float_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|float_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|integer_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|integer_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|bytes_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|string_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|string_value";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|url",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|url";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|description",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|description";
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|format",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|products|<ListIndex>|features|<DictKey>|format";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>"	[mtt_class_string="ord_betterproto.Analysis",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Analysis'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|type"	[mtt_class_string="ord_betterproto.AnalysisAnalysisType",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|type",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=type,
		mtt_type_hint_string="<enum 'AnalysisAnalysisType'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|type";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|details",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|details";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|chmo_id"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|chmo_id",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=chmo_id,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|chmo_id";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|is_of_isolated_species"	[mtt_class_string="builtins.bool",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|is_of_isolated_species",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=is_of_isolated_species,
		mtt_type_hint_string="typing.Optional[bool]"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|is_of_isolated_species";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data"	[mtt_class_string="builtins.dict",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=data,
		mtt_type_hint_string="typing.Dict[str, ord_betterproto.Data]"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_manufacturer"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_manufacturer",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_manufacturer,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_manufacturer";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>",
		mtt_relation_to_parent=instrument_last_calibrated,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>"	[mtt_class_string="ord_betterproto.Data",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data",
		mtt_relation_to_parent="<DictKey>",
		mtt_type_hint_string="<class 'ord_betterproto.Data'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value"	[mtt_class_string="builtins.float",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=float_value,
		mtt_type_hint_string="<class 'float'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|float_value";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value"	[mtt_class_string="builtins.int",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=integer_value,
		mtt_type_hint_string="<class 'int'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|integer_value";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value"	[mtt_class_string="builtins.bytes",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=bytes_value,
		mtt_type_hint_string="<class 'bytes'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|bytes_value";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=string_value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|string_value";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|url";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=description,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|description";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>",
		mtt_relation_to_parent=format,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|data|<DictKey>|format";
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value",
		mtt_parent="<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated" -> "<ROOT>|outcomes|<ListIndex>|analyses|<DictKey>|instrument_last_calibrated|value";
	"<ROOT>|provenance|experimenter"	[mtt_class_string="ord_betterproto.Person",
		mtt_node_name="<ROOT>|provenance|experimenter",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=experimenter,
		mtt_type_hint_string="<class 'ord_betterproto.Person'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|experimenter";
	"<ROOT>|provenance|city"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|city",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=city,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|city";
	"<ROOT>|provenance|experiment_start"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|provenance|experiment_start",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=experiment_start,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|experiment_start";
	"<ROOT>|provenance|doi"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|doi",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=doi,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|doi";
	"<ROOT>|provenance|patent"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|patent",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=patent,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|patent";
	"<ROOT>|provenance|publication_url"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|publication_url",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=publication_url,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|publication_url";
	"<ROOT>|provenance|record_created"	[mtt_class_string="ord_betterproto.RecordEvent",
		mtt_node_name="<ROOT>|provenance|record_created",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=record_created,
		mtt_type_hint_string="<class 'ord_betterproto.RecordEvent'>"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|record_created";
	"<ROOT>|provenance|record_modified"	[mtt_class_string="builtins.list",
		mtt_node_name="<ROOT>|provenance|record_modified",
		mtt_parent="<ROOT>|provenance",
		mtt_relation_to_parent=record_modified,
		mtt_type_hint_string="typing.List[ord_betterproto.RecordEvent]"];
	"<ROOT>|provenance" -> "<ROOT>|provenance|record_modified";
	"<ROOT>|provenance|experimenter|username"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|experimenter|username",
		mtt_parent="<ROOT>|provenance|experimenter",
		mtt_relation_to_parent=username,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|username";
	"<ROOT>|provenance|experimenter|name"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|experimenter|name",
		mtt_parent="<ROOT>|provenance|experimenter",
		mtt_relation_to_parent=name,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|name";
	"<ROOT>|provenance|experimenter|orcid"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|experimenter|orcid",
		mtt_parent="<ROOT>|provenance|experimenter",
		mtt_relation_to_parent=orcid,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|orcid";
	"<ROOT>|provenance|experimenter|organization"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|experimenter|organization",
		mtt_parent="<ROOT>|provenance|experimenter",
		mtt_relation_to_parent=organization,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|organization";
	"<ROOT>|provenance|experimenter|email"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|experimenter|email",
		mtt_parent="<ROOT>|provenance|experimenter",
		mtt_relation_to_parent=email,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|experimenter" -> "<ROOT>|provenance|experimenter|email";
	"<ROOT>|provenance|experiment_start|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|experiment_start|value",
		mtt_parent="<ROOT>|provenance|experiment_start",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|experiment_start" -> "<ROOT>|provenance|experiment_start|value";
	"<ROOT>|provenance|record_created|time"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|provenance|record_created|time",
		mtt_parent="<ROOT>|provenance|record_created",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|provenance|record_created" -> "<ROOT>|provenance|record_created|time";
	"<ROOT>|provenance|record_created|person"	[mtt_class_string="ord_betterproto.Person",
		mtt_node_name="<ROOT>|provenance|record_created|person",
		mtt_parent="<ROOT>|provenance|record_created",
		mtt_relation_to_parent=person,
		mtt_type_hint_string="<class 'ord_betterproto.Person'>"];
	"<ROOT>|provenance|record_created" -> "<ROOT>|provenance|record_created|person";
	"<ROOT>|provenance|record_created|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|details",
		mtt_parent="<ROOT>|provenance|record_created",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created" -> "<ROOT>|provenance|record_created|details";
	"<ROOT>|provenance|record_created|time|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|time|value",
		mtt_parent="<ROOT>|provenance|record_created|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created|time" -> "<ROOT>|provenance|record_created|time|value";
	"<ROOT>|provenance|record_created|person|username"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|person|username",
		mtt_parent="<ROOT>|provenance|record_created|person",
		mtt_relation_to_parent=username,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|username";
	"<ROOT>|provenance|record_created|person|name"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|person|name",
		mtt_parent="<ROOT>|provenance|record_created|person",
		mtt_relation_to_parent=name,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|name";
	"<ROOT>|provenance|record_created|person|orcid"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|person|orcid",
		mtt_parent="<ROOT>|provenance|record_created|person",
		mtt_relation_to_parent=orcid,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|orcid";
	"<ROOT>|provenance|record_created|person|organization"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|person|organization",
		mtt_parent="<ROOT>|provenance|record_created|person",
		mtt_relation_to_parent=organization,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|organization";
	"<ROOT>|provenance|record_created|person|email"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_created|person|email",
		mtt_parent="<ROOT>|provenance|record_created|person",
		mtt_relation_to_parent=email,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_created|person" -> "<ROOT>|provenance|record_created|person|email";
	"<ROOT>|provenance|record_modified|<ListIndex>"	[mtt_class_string="ord_betterproto.RecordEvent",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>",
		mtt_parent="<ROOT>|provenance|record_modified",
		mtt_relation_to_parent="<ListIndex>",
		mtt_type_hint_string="<class 'ord_betterproto.RecordEvent'>"];
	"<ROOT>|provenance|record_modified" -> "<ROOT>|provenance|record_modified|<ListIndex>";
	"<ROOT>|provenance|record_modified|<ListIndex>|time"	[mtt_class_string="ord_betterproto.DateTime",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|time",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>",
		mtt_relation_to_parent=time,
		mtt_type_hint_string="<class 'ord_betterproto.DateTime'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>" -> "<ROOT>|provenance|record_modified|<ListIndex>|time";
	"<ROOT>|provenance|record_modified|<ListIndex>|person"	[mtt_class_string="ord_betterproto.Person",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|person",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>",
		mtt_relation_to_parent=person,
		mtt_type_hint_string="<class 'ord_betterproto.Person'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>" -> "<ROOT>|provenance|record_modified|<ListIndex>|person";
	"<ROOT>|provenance|record_modified|<ListIndex>|details"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|details",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>",
		mtt_relation_to_parent=details,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>" -> "<ROOT>|provenance|record_modified|<ListIndex>|details";
	"<ROOT>|provenance|record_modified|<ListIndex>|time|value"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|time|value",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>|time",
		mtt_relation_to_parent=value,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|time" -> "<ROOT>|provenance|record_modified|<ListIndex>|time|value";
	"<ROOT>|provenance|record_modified|<ListIndex>|person|username"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|person|username",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>|person",
		mtt_relation_to_parent=username,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|username";
	"<ROOT>|provenance|record_modified|<ListIndex>|person|name"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|person|name",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>|person",
		mtt_relation_to_parent=name,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|name";
	"<ROOT>|provenance|record_modified|<ListIndex>|person|orcid"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|person|orcid",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>|person",
		mtt_relation_to_parent=orcid,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|orcid";
	"<ROOT>|provenance|record_modified|<ListIndex>|person|organization"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|person|organization",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>|person",
		mtt_relation_to_parent=organization,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|organization";
	"<ROOT>|provenance|record_modified|<ListIndex>|person|email"	[mtt_class_string="builtins.str",
		mtt_node_name="<ROOT>|provenance|record_modified|<ListIndex>|person|email",
		mtt_parent="<ROOT>|provenance|record_modified|<ListIndex>|person",
		mtt_relation_to_parent=email,
		mtt_type_hint_string="<class 'str'>"];
	"<ROOT>|provenance|record_modified|<ListIndex>|person" -> "<ROOT>|provenance|record_modified|<ListIndex>|person|email";
}
